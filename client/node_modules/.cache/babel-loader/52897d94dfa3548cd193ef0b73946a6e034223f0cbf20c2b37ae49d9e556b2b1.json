{"ast":null,"code":"import _regeneratorRuntime from\"D:/Don't Click Here/2022_2/code_2/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Don't Click Here/2022_2/code_2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Don't Click Here/2022_2/code_2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import MainFrame from'../../mainframe/MainFrame';import{useNavigate}from'react-router-dom';import{PATH}from'../../../constant/constant';import{getPandemicDataAPI,getSupplyQuantityOfAllProvincesAPI,clusterAPI}from'../../../service/userService';import Dropdown from'../../dropdown/Dropdown';import province from'../../../constant/province';import{useSelector,useDispatch}from'react-redux';import{changeSupplyDataAnalyse,sortWithAbility}from'../../../store/reducer/supplyDataAnalyseSlice';import{enebleLoadingScreen,disableLoadingScreen}from'../../../store/reducer/showLoadingScreenSlice';// Excel\nimport*as XLSX from'xlsx';import{saveAs}from'file-saver';import SupplyTable_New from'./supplytable/SupplyTable_New';// import S_SMC_FCM from '../../../logic/sSMC_FCM';\nimport WeightTableSupply from'./supplytable/WeightTableSupply';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SupplyAnalyse_New(){var navigate=useNavigate();var SupplyData=useSelector(function(state){return state.supplyDataAnalyse.data;});var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),superData=_useState2[0],setSuperData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pandemicData=_useState4[0],setPandemicData=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),pandemicSelect=_useState6[0],setPandemicSelect=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showWeightTable=_useState8[0],setShowWeightTable=_useState8[1];var _useState9=useState([0.1,0.1,0.1,0.1]),_useState10=_slicedToArray(_useState9,2),weight=_useState10[0],setWeight=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isShowWeight=_useState12[0],setIsShowWeight=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showTip=_useState14[0],setShowTip=_useState14[1];var _useState15=useState([{id:-1,name:'Chưa có dữ liệu'}]),_useState16=_slicedToArray(_useState15,2),supplyType=_useState16[0],setSupplyType=_useState16[1];var _useState17=useState(-1),_useState18=_slicedToArray(_useState17,2),supplyTypeSelect=_useState18[0],setSupplyTypeSelect=_useState18[1];var _useState19=useState({// supply_quatity: 1,\nsupply_quatity_per_person:1,population:1,population_density:1,level:1}),_useState20=_slicedToArray(_useState19,2),weightList=_useState20[0],setWeightList=_useState20[1];var weightLabel=[// 'supply_quatity',\n'supply_quatity_per_person','population','population_density','level'];var changePandemic=function changePandemic(option){setPandemicSelect(pandemicData.find(function(e){return e.pandemic_name==option;}).pandemic_id);};var changeSupplyType=function changeSupplyType(option){setSupplyTypeSelect(supplyType.find(function(e){return e.name==option;}).id);};var changeIsShowWeight=function changeIsShowWeight(event){setIsShowWeight(event.target.checked);};var closeDialog=function closeDialog(data){// console.log(data);\nif(data){setWeight(data);var weightListTmp=weightList;weightLabel.forEach(function(e,index){weightListTmp[e]=data[index];});setWeightList(weightListTmp);// console.log(weightList);\n}setShowWeightTable(false);};var Clust=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var U,C,tagField,keys;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// console.log(SupplyData);\nU=SupplyData.map(function(e){return{province_id:e.province_id,province_name:e.province_name,population:e.population/1000000,population_density:e.population_density,level:e.level,supply_name:e.supply_name,supply_quantity:e.supply_quantity,supply_quatity_per_person:e.supply_quatity_per_person,ability:e.ability};});C=[1,2,3];// Danh sách các nhãn cần phân cụm\ntagField='ability';// Trường dữ liệu chứa nhãn\nkeys=['province_name','province_id','supply_name','supply_quantity'];// Các trường dữ liệu không tham gia vào việc phân cụm\ndispatch(enebleLoadingScreen());clusterAPI(U,C,tagField,keys,weightList).then(function(data){// console.log(data);\ndispatch(changeSupplyDataAnalyse({data:data.map(function(e){return{province_id:e.province_id,province_name:e.province_name,population:e.population*1000000,population_density:e.population_density,level:e.level,supply_name:e.supply_name,supply_quantity:e.supply_quantity,supply_quatity_per_person:e.supply_quatity_per_person,ability:e.cluster_label};})}));dispatch(sortWithAbility());dispatch(disableLoadingScreen());}).catch(function(error){console.error('Đã xảy ra lỗi:',error);});case 6:case\"end\":return _context.stop();}},_callee);}));return function Clust(){return _ref.apply(this,arguments);};}();var downloadFile=function downloadFile(){var currentTime=new Date().getTime();var fileName=\"\".concat(currentTime,\"_EpidemicAnalyse.xlsx\");// Tạo workbook mới\nvar workbook=XLSX.utils.book_new();// Convert data to worksheet format\nconsole.log(SupplyData);var worksheet=XLSX.utils.json_to_sheet(SupplyData.map(function(e){return{pandemic_id:pandemicSelect,pandemic_name:pandemicData.find(function(m){return m.pandemic_id==pandemicSelect;}).pandemic_name,province_id:e.province_id,province_name:e.province_name,supply_type_id:supplyTypeSelect,supply_name:e.supply_name,supply_quantity:e.supply_quantity,ability:e.ability};}));// console.log(fileName, workbook, worksheet);\n// Append worksheet to workbook\nXLSX.utils.book_append_sheet(workbook,worksheet,'Data');// Write workbook to Excel file\nvar excelBuffer=XLSX.write(workbook,{bookType:'xlsx',type:'buffer'});// Create a Blob from the buffer\nvar blob=new Blob([excelBuffer],{type:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});// Download the file\nsaveAs(blob,fileName);};useEffect(function(){if(localStorage.getItem('role')!=1){navigate(PATH.HOME);}var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var pandemicDataSrevice;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getPandemicDataAPI();case 3:pandemicDataSrevice=_context2.sent;setPandemicData(pandemicDataSrevice);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[]);useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return getSupplyQuantityOfAllProvincesAPI(pandemicSelect);case 3:data=_context3.sent;// console.log(data);\nsetSupplyTypeSelect(-1);setSupplyType(data.listSupplyType.length>0?data.listSupplyType:[{id:-1,name:'Chưa có dữ liệu'}]);data.data.forEach(function(e){if(!e.ability){e.ability=0;}});setSuperData(data.data);_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}},_callee3,null,[[0,10]]);}));return function fetchData(){return _ref3.apply(this,arguments);};}();fetchData();},[pandemicSelect]);useEffect(function(){setSupplyTypeSelect(supplyType[0].id);},[supplyType]);useEffect(function(){// console.log(superData);\nvar data=superData.map(function(dt){var supply_name='',supply_quantity=0,supply_quatity_per_person=0;if(supplyTypeSelect!=-1&&dt.data.length>0){var findItem=dt.data.find(function(e){return e.supply_type_id==supplyTypeSelect;});supply_name=findItem.supply_type_name;supply_quantity=findItem.supply_quantity;supply_quatity_per_person=parseFloat((supply_quantity/dt.population).toFixed(2));}return{province_id:dt.province_id,province_name:province[dt.province_id-1],population:dt.population,population_density:dt.population_density,level:dt.level,ability:dt.ability,supply_name:supply_name,supply_quantity:supply_quantity,supply_quatity_per_person:supply_quatity_per_person};});// console.log(data);\ndispatch(changeSupplyDataAnalyse({data:data}));},[superData,supplyTypeSelect]);return/*#__PURE__*/_jsxs(MainFrame,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Ph\\xE2n t\\xEDch t\\xECnh h\\xECnh d\\u1ECBch b\\u1EC7nh\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-3 gap-4 mt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-1\",children:[/*#__PURE__*/_jsx(Dropdown,{data:pandemicData.map(function(e){return e.pandemic_name;}),func:changePandemic}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsx(Dropdown,{data:supplyType.map(function(e){return e.name;}),func:changeSupplyType})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full mt-4\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"text-lg flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"h-6 w-6\",type:\"checkbox\",checked:isShowWeight,onChange:changeIsShowWeight}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",children:\"Xem tr\\u1ECDng s\\u1ED1\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 cursor-pointer\",onClick:function onClick(){setShowTip(!showTip);},children:showTip?/*#__PURE__*/_jsxs(\"div\",{className:\" text-green-900\",children:[\"V\\u1EDBi c\\xE1c lo\\u1EA1i v\\u1EADt t\\u01B0 y t\\u1EBF d\\xF9ng 1 l\\u1EA7n nh\\u01B0 v\\u1EAFc xin ho\\u1EB7c kit test, vi\\u1EC7c \\u0111\\xE1nh gi\\xE1 kh\\u1EA3 n\\u0103ng h\\u1ED7 tr\\u1EE3 VTYT c\\xF3 th\\u1EC3 tham kh\\u1EA3o c\\xF4ng th\\u1EE9c sau:\",/*#__PURE__*/_jsx(\"br\",{}),\"Gi\\xE1 tr\\u1ECB \\u0111\\xE1nh gi\\xE1 = \\u03B1 * (S\\u1ED1 l\\u01B0\\u1EE3ng VTYT /ng\\u01B0\\u1EDDi)/(M\\u1EADt \\u0111\\u1ED9 d\\xE2n c\\u01B0 * C\\u1EA5p \\u0111\\u1ED9 d\\u1ECBch).\",/*#__PURE__*/_jsx(\"br\",{}),\"V\\u1EDBi \\u03B1 l\\xE0 h\\u1EC7 s\\u1ED1 do chuy\\xEAn vi\\xEAn quy\\u1EBFt \\u0111\\u1ECBnh.\",/*#__PURE__*/_jsx(\"br\",{}),\"M\\u1ED9t tinh th\\xE0nh ph\\u1ED1 \\u0111\\u01B0\\u1EE3c \\u0111\\xE1nh gi\\xE1 l\\xE0 t\\u1EF1 cung \\u1EE9ng n\\u1EBFu 0.1 < Gi\\xE1 tr\\u1ECB \\u0111\\xE1nh gi\\xE1 < 0.15\",/*#__PURE__*/_jsx(\"br\",{}),\"N\\u1EBFu nh\\u1ECF h\\u01A1n 0.1 s\\u1EBD \\u0111\\u01B0\\u1EE3c coi l\\xE0 c\\u1EA7n h\\u1ED7 tr\\u1EE3 VTYT, n\\u1EBFu l\\u1EDBn h\\u01A1n 0.15 s\\u1EBD \\u0111\\u01B0\\u1EE3c coi l\\xE0 c\\xF3 th\\u1EC3 h\\u1ED7 tr\\u1ECD VTYT t\\u1EDBi c\\xE1c t\\u1EC9nh th\\xE0nh kh\\xE1c.\"]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-500 underline\",children:\"Xem g\\u1EE3i \\xFD \\u0111\\xE1nh gi\\xE1\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"btn btn-primary w-full \"+(supplyTypeSelect==-1?'disabled':''),onClick:function onClick(){setShowWeightTable(true);},children:\"Thi\\u1EBFt l\\u1EADp tr\\u1ECDng s\\u1ED1\"}),showWeightTable&&/*#__PURE__*/_jsx(WeightTableSupply,{data:weight,supplyTypeSelect:supplyType.find(function(e){return e.id==supplyTypeSelect;}).name,func:closeDialog}),/*#__PURE__*/_jsx(\"div\",{className:\"btn btn-primary w-full mt-4 \"+(supplyTypeSelect==-1?'disabled':''),onClick:Clust,children:\"Ph\\xE2n c\\u1EE5m\"}),/*#__PURE__*/_jsx(\"div\",{className:\"btn btn-success w-full mt-4\",onClick:downloadFile,children:\"Download d\\u1EEF li\\u1EC7u\"})]})]}),supplyTypeSelect!=-1&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-5\",children:/*#__PURE__*/_jsx(SupplyTable_New,{weightData:weight,isShowWeight:isShowWeight})})]});}export default SupplyAnalyse_New;","map":{"version":3,"names":["useState","useEffect","MainFrame","useNavigate","PATH","getPandemicDataAPI","getSupplyQuantityOfAllProvincesAPI","clusterAPI","Dropdown","province","useSelector","useDispatch","changeSupplyDataAnalyse","sortWithAbility","enebleLoadingScreen","disableLoadingScreen","XLSX","saveAs","SupplyTable_New","WeightTableSupply","jsx","_jsx","jsxs","_jsxs","SupplyAnalyse_New","navigate","SupplyData","state","supplyDataAnalyse","data","dispatch","_useState","_useState2","_slicedToArray","superData","setSuperData","_useState3","_useState4","pandemicData","setPandemicData","_useState5","_useState6","pandemicSelect","setPandemicSelect","_useState7","_useState8","showWeightTable","setShowWeightTable","_useState9","_useState10","weight","setWeight","_useState11","_useState12","isShowWeight","setIsShowWeight","_useState13","_useState14","showTip","setShowTip","_useState15","id","name","_useState16","supplyType","setSupplyType","_useState17","_useState18","supplyTypeSelect","setSupplyTypeSelect","_useState19","supply_quatity_per_person","population","population_density","level","_useState20","weightList","setWeightList","weightLabel","changePandemic","option","find","e","pandemic_name","pandemic_id","changeSupplyType","changeIsShowWeight","event","target","checked","closeDialog","weightListTmp","forEach","index","Clust","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","U","C","tagField","keys","wrap","_callee$","_context","prev","next","map","province_id","province_name","supply_name","supply_quantity","ability","then","cluster_label","catch","error","console","stop","apply","arguments","downloadFile","currentTime","Date","getTime","fileName","concat","workbook","utils","book_new","log","worksheet","json_to_sheet","m","supply_type_id","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","localStorage","getItem","HOME","fetchData","_ref2","_callee2","pandemicDataSrevice","_callee2$","_context2","sent","t0","_ref3","_callee3","_callee3$","_context3","listSupplyType","length","dt","findItem","supply_type_name","parseFloat","toFixed","children","className","func","onChange","onClick","weightData"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/components/subscreen/expert/SupplyAnalyse_New.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport MainFrame from '../../mainframe/MainFrame'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PATH } from '../../../constant/constant';\r\nimport { getPandemicDataAPI, getSupplyQuantityOfAllProvincesAPI, clusterAPI } from '../../../service/userService'\r\nimport Dropdown from '../../dropdown/Dropdown';\r\nimport province from '../../../constant/province'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeSupplyDataAnalyse, sortWithAbility } from '../../../store/reducer/supplyDataAnalyseSlice';\r\nimport { enebleLoadingScreen, disableLoadingScreen } from '../../../store/reducer/showLoadingScreenSlice';\r\n\r\n// Excel\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport SupplyTable_New from './supplytable/SupplyTable_New';\r\n// import S_SMC_FCM from '../../../logic/sSMC_FCM';\r\nimport WeightTableSupply from './supplytable/WeightTableSupply';\r\n\r\nfunction SupplyAnalyse_New() {\r\n  const navigate = useNavigate();\r\n  const SupplyData = useSelector((state) => state.supplyDataAnalyse.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const [superData, setSuperData] = useState([]);\r\n  const [pandemicData, setPandemicData] = useState([]);\r\n  \r\n  const [pandemicSelect, setPandemicSelect] = useState(1);\r\n\r\n  const [showWeightTable, setShowWeightTable] = useState(false);\r\n  const [weight, setWeight] = useState([0.1,0.1,0.1,0.1]);\r\n  const [isShowWeight, setIsShowWeight] = useState(false);\r\n  const [showTip, setShowTip] = useState(false);\r\n\r\n  const [supplyType, setSupplyType] = useState([{id: -1, name: 'Chưa có dữ liệu'}]);\r\n  const [supplyTypeSelect, setSupplyTypeSelect] = useState(-1);\r\n\r\n  const [weightList, setWeightList] = useState({\r\n    // supply_quatity: 1,\r\n    supply_quatity_per_person: 1,\r\n    population: 1,\r\n    population_density: 1,\r\n    level: 1,\r\n  });\r\n\r\n  const weightLabel = [\r\n    // 'supply_quatity',\r\n    'supply_quatity_per_person',\r\n    'population',\r\n    'population_density',\r\n    'level',\r\n  ]\r\n\r\n  const changePandemic = (option) => {\r\n    setPandemicSelect(pandemicData.find(e=>e.pandemic_name==option).pandemic_id);\r\n  }\r\n\r\n  const changeSupplyType = (option) => {\r\n    setSupplyTypeSelect(supplyType.find(e=>e.name==option).id);\r\n  }\r\n\r\n  const changeIsShowWeight = (event) => {\r\n    setIsShowWeight(event.target.checked);\r\n  }\r\n\r\n  const closeDialog = (data)=>{\r\n    // console.log(data);\r\n    if(data){\r\n      setWeight(data);\r\n      let weightListTmp = weightList;\r\n      weightLabel.forEach((e, index)=>{\r\n        weightListTmp[e] = data[index];\r\n      });\r\n      setWeightList(weightListTmp);\r\n      // console.log(weightList);\r\n    }\r\n    setShowWeightTable(false);\r\n  }\r\n\r\n  const Clust = async () => {\r\n    // console.log(SupplyData);\r\n    let U = SupplyData.map(e=>{\r\n      return {\r\n        province_id: e.province_id,\r\n        province_name: e.province_name,\r\n        population: (e.population)/1000000,\r\n        population_density: e.population_density,\r\n        level: e.level,\r\n        supply_name: e.supply_name,\r\n        supply_quantity: e.supply_quantity,\r\n        supply_quatity_per_person: e.supply_quatity_per_person,\r\n        ability: e.ability,\r\n      }\r\n    });\r\n    const C = [1, 2, 3]; // Danh sách các nhãn cần phân cụm\r\n    \r\n    const tagField = 'ability'; // Trường dữ liệu chứa nhãn\r\n    \r\n    const keys = ['province_name', 'province_id', 'supply_name', 'supply_quantity']; // Các trường dữ liệu không tham gia vào việc phân cụm\r\n    \r\n    dispatch(enebleLoadingScreen());\r\n    clusterAPI(U, C, tagField, keys, weightList)\r\n      .then(data => {\r\n        // console.log(data);\r\n        dispatch(changeSupplyDataAnalyse({data: data.map(e=>{\r\n          return {\r\n            province_id: e.province_id,\r\n            province_name: e.province_name,\r\n            population: (e.population)*1000000,\r\n            population_density: e.population_density,\r\n            level: e.level,\r\n            supply_name: e.supply_name,\r\n            supply_quantity: e.supply_quantity,\r\n            supply_quatity_per_person: e.supply_quatity_per_person,\r\n            ability: e.cluster_label,\r\n          }\r\n        })}))\r\n        dispatch(sortWithAbility())\r\n        dispatch(disableLoadingScreen());\r\n      })\r\n      .catch(error => {\r\n        console.error('Đã xảy ra lỗi:', error);\r\n      });\r\n  }\r\n\r\n  const downloadFile = () => {\r\n    const currentTime = new Date().getTime();\r\n    const fileName = `${currentTime}_EpidemicAnalyse.xlsx`;\r\n    // Tạo workbook mới\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // Convert data to worksheet format\r\n    console.log(SupplyData);\r\n    const worksheet = XLSX.utils.json_to_sheet(SupplyData.map(e=>{\r\n      return {\r\n        pandemic_id: pandemicSelect,\r\n        pandemic_name: pandemicData.find(m=>m.pandemic_id==pandemicSelect).pandemic_name,\r\n        province_id: e.province_id,\r\n        province_name: e.province_name,\r\n        supply_type_id: supplyTypeSelect,\r\n        supply_name: e.supply_name,\r\n        supply_quantity: e.supply_quantity,\r\n        ability: e.ability,\r\n      }\r\n    }));\r\n    // console.log(fileName, workbook, worksheet);\r\n    // Append worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n    // Write workbook to Excel file\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    // Create a Blob from the buffer\r\n    const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    // Download the file\r\n    saveAs(blob, fileName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('role') != 1){\r\n      navigate(PATH.HOME);\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        const pandemicDataSrevice = await getPandemicDataAPI();\r\n        setPandemicData(pandemicDataSrevice);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getSupplyQuantityOfAllProvincesAPI(pandemicSelect);\r\n        // console.log(data);\r\n        setSupplyTypeSelect(-1);\r\n        setSupplyType(data.listSupplyType.length > 0 ? \r\n          data.listSupplyType : [{id: -1, name: 'Chưa có dữ liệu'}]);\r\n\r\n        data.data.forEach(e=>{\r\n          if(!e.ability){\r\n            e.ability = 0;\r\n          }\r\n        })\r\n        setSuperData(data.data);\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [pandemicSelect]);\r\n\r\n  useEffect(()=>{\r\n    setSupplyTypeSelect(supplyType[0].id);\r\n  }, [supplyType])\r\n\r\n  useEffect(()=>{\r\n    // console.log(superData);\r\n    const data = superData.map(dt=>{\r\n      let supply_name = '', supply_quantity = 0, supply_quatity_per_person = 0;\r\n      if(supplyTypeSelect != -1 && dt.data.length > 0){\r\n        const findItem = dt.data.find(e=>e.supply_type_id==supplyTypeSelect);\r\n        supply_name = findItem.supply_type_name;\r\n        supply_quantity = findItem.supply_quantity;\r\n        supply_quatity_per_person = parseFloat((supply_quantity/dt.population).toFixed(2));\r\n      }\r\n      return {\r\n        province_id: dt.province_id,\r\n        province_name: province[dt.province_id-1],\r\n        population: dt.population,\r\n        population_density: dt.population_density,\r\n        level: dt.level,\r\n        ability: dt.ability,\r\n        supply_name: supply_name,\r\n        supply_quantity: supply_quantity,\r\n        supply_quatity_per_person: supply_quatity_per_person,\r\n      }\r\n    });\r\n    // console.log(data);\r\n    dispatch(changeSupplyDataAnalyse({data: data}));\r\n  }, [superData, supplyTypeSelect])\r\n\r\n  return (\r\n    <MainFrame>\r\n      <h1>Phân tích tình hình dịch bệnh</h1>\r\n      <div className=\"grid grid-cols-3 gap-4 mt-5\">\r\n        <div className=\"col-span-1\">\r\n          <Dropdown data={pandemicData.map(e=>e.pandemic_name)} func={changePandemic}/>\r\n          <div className=\"mt-4\"><Dropdown data={supplyType.map(e=>e.name)} func={changeSupplyType}/></div>\r\n          <div className=\"w-full mt-4\">\r\n            <label className='text-lg flex items-center'>\r\n              <input className='h-6 w-6' type=\"checkbox\" checked={isShowWeight} onChange={changeIsShowWeight} />\r\n              <span className='ml-1'>Xem trọng số</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-4 cursor-pointer\" onClick={()=>{setShowTip(!showTip)}}>\r\n            {showTip ? \r\n            <div className=\" text-green-900\">\r\n              Với các loại vật tư y tế dùng 1 lần như vắc xin hoặc kit test, \r\n              việc đánh giá khả năng hỗ trợ VTYT có thể tham khảo công thức sau: \r\n              <br />Giá trị đánh giá = α * (Số lượng VTYT /người)/(Mật độ dân cư * Cấp độ dịch). \r\n              <br />Với α là hệ số do chuyên viên quyết định. \r\n              <br />Một tinh thành phố được đánh giá là tự cung ứng nếu 0.1 &lt; Giá trị đánh giá &lt; 0.15\r\n              <br />Nếu nhỏ hơn 0.1 sẽ được coi là cần hỗ trợ VTYT, nếu lớn hơn 0.15 sẽ được coi là có thể hỗ trọ VTYT tới các tỉnh thành khác.\r\n            </div> : <div className=\"text-blue-500 underline\">Xem gợi ý đánh giá</div>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-1\"></div>\r\n        <div className=\"col-span-1\">\r\n          <div className={\"btn btn-primary w-full \"+(supplyTypeSelect==-1?'disabled':'')} onClick={()=>{setShowWeightTable(true)}}>Thiết lập trọng số</div>\r\n          {showWeightTable && <WeightTableSupply data={weight} supplyTypeSelect={supplyType.find(e=>e.id==supplyTypeSelect).name} func={closeDialog} />}\r\n          <div className={\"btn btn-primary w-full mt-4 \"+(supplyTypeSelect==-1?'disabled':'')} onClick={Clust}>Phân cụm</div>\r\n          <div className=\"btn btn-success w-full mt-4\" onClick={downloadFile}>Download dữ liệu</div>\r\n        </div>\r\n      </div>\r\n      {supplyTypeSelect!=-1 && <div className=\"mt-5\">\r\n        <SupplyTable_New weightData={weight} isShowWeight={isShowWeight} />\r\n      </div>}\r\n      \r\n    </MainFrame>\r\n  )\r\n}\r\n\r\nexport default SupplyAnalyse_New"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}