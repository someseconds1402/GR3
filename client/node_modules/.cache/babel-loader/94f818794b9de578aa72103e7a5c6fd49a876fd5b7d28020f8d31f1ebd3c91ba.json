{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst epidemicDataAnalyseSlice = createSlice({\n  name: 'EpidemicDataAnalyse',\n  initialState: {\n    data: [{\n      province_id: 0,\n      province_name: '',\n      population: 0,\n      population_density: 0,\n      level: 0,\n      infection_new: 0,\n      infection_total: 0,\n      infection_average: 0,\n      recovered_new: 0,\n      recovered_total: 0,\n      recovered_average: 0,\n      death_new: 0,\n      death_total: 0,\n      death_average: 0\n    }]\n  },\n  reducers: {\n    changeEpidemicDataAnalyse: (state, action) => {\n      state.data = action.payload.data;\n    },\n    changeLevel: (state, action) => {\n      state.data.forEach(e => {\n        if (e.province_id == action.payload.province_id) {\n          e.level = action.payload.level;\n        }\n      });\n    },\n    sortWithLevel: state => {\n      state.data.sort((a, b) => a.level - b.level);\n    }\n  }\n});\nexport const {\n  changeEpidemicDataAnalyse,\n  changeLevel,\n  sortWithLevel\n} = epidemicDataAnalyseSlice.actions;\nexport default epidemicDataAnalyseSlice.reducer;","map":{"version":3,"names":["createSlice","epidemicDataAnalyseSlice","name","initialState","data","province_id","province_name","population","population_density","level","infection_new","infection_total","infection_average","recovered_new","recovered_total","recovered_average","death_new","death_total","death_average","reducers","changeEpidemicDataAnalyse","state","action","payload","changeLevel","forEach","e","sortWithLevel","sort","a","b","actions","reducer"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/store/reducer/epidemicDataAnalyseSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst epidemicDataAnalyseSlice = createSlice({\r\n    name: 'EpidemicDataAnalyse',\r\n    initialState: {\r\n        data: [{\r\n            province_id: 0,\r\n            province_name: '',\r\n            population: 0,\r\n            population_density: 0,\r\n            level: 0,\r\n            infection_new: 0,\r\n            infection_total: 0,\r\n            infection_average: 0,\r\n            recovered_new: 0,\r\n            recovered_total: 0,\r\n            recovered_average: 0,\r\n            death_new: 0,\r\n            death_total: 0,\r\n            death_average: 0,\r\n        }],\r\n    },\r\n    reducers: {\r\n        changeEpidemicDataAnalyse: (state, action) => {\r\n            state.data = action.payload.data;\r\n        },\r\n        changeLevel: (state, action) => {\r\n            state.data.forEach(e => {\r\n                if (e.province_id == action.payload.province_id) {\r\n                    e.level = action.payload.level;\r\n                }\r\n            })\r\n        },\r\n        sortWithLevel: (state) => {\r\n            state.data.sort((a, b) => a.level - b.level);\r\n        }\r\n    },\r\n});\r\n\r\nexport const { changeEpidemicDataAnalyse, changeLevel, sortWithLevel } = epidemicDataAnalyseSlice.actions;\r\nexport default epidemicDataAnalyseSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,wBAAwB,GAAGD,WAAW,CAAC;EACzCE,IAAI,EAAE,qBAAqB;EAC3BC,YAAY,EAAE;IACVC,IAAI,EAAE,CAAC;MACHC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE,CAAC;MACbC,kBAAkB,EAAE,CAAC;MACrBC,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE,CAAC;MAClBC,iBAAiB,EAAE,CAAC;MACpBC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE,CAAC;MAClBC,iBAAiB,EAAE,CAAC;MACpBC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE;IACnB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,yBAAyB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACjB,IAAI,GAAGkB,MAAM,CAACC,OAAO,CAACnB,IAAI;IACpC,CAAC;IACDoB,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACjB,IAAI,CAACqB,OAAO,CAACC,CAAC,IAAI;QACpB,IAAIA,CAAC,CAACrB,WAAW,IAAIiB,MAAM,CAACC,OAAO,CAAClB,WAAW,EAAE;UAC7CqB,CAAC,CAACjB,KAAK,GAAGa,MAAM,CAACC,OAAO,CAACd,KAAK;QAClC;MACJ,CAAC,CAAC;IACN,CAAC;IACDkB,aAAa,EAAGN,KAAK,IAAK;MACtBA,KAAK,CAACjB,IAAI,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACpB,KAAK,GAAGqB,CAAC,CAACrB,KAAK,CAAC;IAChD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEW,yBAAyB;EAAEI,WAAW;EAAEG;AAAc,CAAC,GAAG1B,wBAAwB,CAAC8B,OAAO;AACzG,eAAe9B,wBAAwB,CAAC+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}