{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var epidemicDataAnalyseSlice=createSlice({name:'EpidemicDataAnalyse',initialState:{data:[{province_id:0,province_name:'',population:0,population_density:0,level:0,infection_new:0,infection_total:0,infection_average:0,recovered_new:0,recovered_total:0,recovered_average:0,death_new:0,death_total:0,death_average:0}]},reducers:{changeEpidemicDataAnalyse:function changeEpidemicDataAnalyse(state,action){state.data=action.payload.data;},changeLevel:function changeLevel(state,action){state.data.forEach(function(e){if(e.province_id==action.payload.province_id){e.level=action.payload.level;}});},sortWithLevel:function sortWithLevel(state){state.data.sort(function(a,b){return a.level-b.level;});},resetAllLevel:function resetAllLevel(state){state.data.forEach(function(e){e.level=0;});}}});var _epidemicDataAnalyseS=epidemicDataAnalyseSlice.actions,changeEpidemicDataAnalyse=_epidemicDataAnalyseS.changeEpidemicDataAnalyse,changeLevel=_epidemicDataAnalyseS.changeLevel,sortWithLevel=_epidemicDataAnalyseS.sortWithLevel,resetAllLevel=_epidemicDataAnalyseS.resetAllLevel;export{changeEpidemicDataAnalyse,changeLevel,sortWithLevel,resetAllLevel};export default epidemicDataAnalyseSlice.reducer;","map":{"version":3,"names":["createSlice","epidemicDataAnalyseSlice","name","initialState","data","province_id","province_name","population","population_density","level","infection_new","infection_total","infection_average","recovered_new","recovered_total","recovered_average","death_new","death_total","death_average","reducers","changeEpidemicDataAnalyse","state","action","payload","changeLevel","forEach","e","sortWithLevel","sort","a","b","resetAllLevel","_epidemicDataAnalyseS","actions","reducer"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/store/reducer/epidemicDataAnalyseSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst epidemicDataAnalyseSlice = createSlice({\r\n    name: 'EpidemicDataAnalyse',\r\n    initialState: {\r\n        data: [{\r\n            province_id: 0,\r\n            province_name: '',\r\n            population: 0,\r\n            population_density: 0,\r\n            level: 0,\r\n            infection_new: 0,\r\n            infection_total: 0,\r\n            infection_average: 0,\r\n            recovered_new: 0,\r\n            recovered_total: 0,\r\n            recovered_average: 0,\r\n            death_new: 0,\r\n            death_total: 0,\r\n            death_average: 0,\r\n        }],\r\n    },\r\n    reducers: {\r\n        changeEpidemicDataAnalyse: (state, action) => {\r\n            state.data = action.payload.data;\r\n        },\r\n        changeLevel: (state, action) => {\r\n            state.data.forEach(e => {\r\n                if (e.province_id == action.payload.province_id) {\r\n                    e.level = action.payload.level;\r\n                }\r\n            })\r\n        },\r\n        sortWithLevel: (state) => {\r\n            state.data.sort((a, b) => a.level - b.level);\r\n        },\r\n        resetAllLevel: (state) => {\r\n            state.data.forEach(e => {\r\n                e.level = 0;\r\n            })\r\n        }\r\n    },\r\n});\r\n\r\nexport const { changeEpidemicDataAnalyse, changeLevel, sortWithLevel, resetAllLevel } = epidemicDataAnalyseSlice.actions;\r\nexport default epidemicDataAnalyseSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,wBAAwB,CAAGD,WAAW,CAAC,CACzCE,IAAI,CAAE,qBAAqB,CAC3BC,YAAY,CAAE,CACVC,IAAI,CAAE,CAAC,CACHC,WAAW,CAAE,CAAC,CACdC,aAAa,CAAE,EAAE,CACjBC,UAAU,CAAE,CAAC,CACbC,kBAAkB,CAAE,CAAC,CACrBC,KAAK,CAAE,CAAC,CACRC,aAAa,CAAE,CAAC,CAChBC,eAAe,CAAE,CAAC,CAClBC,iBAAiB,CAAE,CAAC,CACpBC,aAAa,CAAE,CAAC,CAChBC,eAAe,CAAE,CAAC,CAClBC,iBAAiB,CAAE,CAAC,CACpBC,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,CAAC,CACdC,aAAa,CAAE,CACnB,CAAC,CACL,CAAC,CACDC,QAAQ,CAAE,CACNC,yBAAyB,CAAE,SAAAA,0BAACC,KAAK,CAAEC,MAAM,CAAK,CAC1CD,KAAK,CAACjB,IAAI,CAAGkB,MAAM,CAACC,OAAO,CAACnB,IAAI,CACpC,CAAC,CACDoB,WAAW,CAAE,SAAAA,YAACH,KAAK,CAAEC,MAAM,CAAK,CAC5BD,KAAK,CAACjB,IAAI,CAACqB,OAAO,CAAC,SAAAC,CAAC,CAAI,CACpB,GAAIA,CAAC,CAACrB,WAAW,EAAIiB,MAAM,CAACC,OAAO,CAAClB,WAAW,CAAE,CAC7CqB,CAAC,CAACjB,KAAK,CAAGa,MAAM,CAACC,OAAO,CAACd,KAAK,CAClC,CACJ,CAAC,CAAC,CACN,CAAC,CACDkB,aAAa,CAAE,SAAAA,cAACN,KAAK,CAAK,CACtBA,KAAK,CAACjB,IAAI,CAACwB,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAK,CAAAD,CAAC,CAACpB,KAAK,CAAGqB,CAAC,CAACrB,KAAK,GAAC,CAChD,CAAC,CACDsB,aAAa,CAAE,SAAAA,cAACV,KAAK,CAAK,CACtBA,KAAK,CAACjB,IAAI,CAACqB,OAAO,CAAC,SAAAC,CAAC,CAAI,CACpBA,CAAC,CAACjB,KAAK,CAAG,CAAC,CACf,CAAC,CAAC,CACN,CACJ,CACJ,CAAC,CAAC,CAEK,IAAAuB,qBAAA,CAAiF/B,wBAAwB,CAACgC,OAAO,CAAzGb,yBAAyB,CAAAY,qBAAA,CAAzBZ,yBAAyB,CAAEI,WAAW,CAAAQ,qBAAA,CAAXR,WAAW,CAAEG,aAAa,CAAAK,qBAAA,CAAbL,aAAa,CAAEI,aAAa,CAAAC,qBAAA,CAAbD,aAAa,CAAsC,OAAAX,yBAAA,CAAAI,WAAA,CAAAG,aAAA,CAAAI,aAAA,EACzH,cAAe,CAAA9B,wBAAwB,CAACiC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}