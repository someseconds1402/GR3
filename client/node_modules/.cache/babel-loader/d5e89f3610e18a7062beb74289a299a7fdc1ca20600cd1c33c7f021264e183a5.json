{"ast":null,"code":"import axios from \"axios\";\nimport { PATH_API } from \"../constant/constant\";\nconst handleLoginAPI = async (email, password) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.LOGIN_API, {\n      email,\n      password\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getPandemicDataAPI = async () => {\n  try {\n    return (await axios.get(PATH_API.BASE_URL + PATH_API.GET_PANDEMIC_DATA)).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getEpidemicDataAPI = async (province_id, pandemic_id, date) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_EPIDEMIC_DATA, {\n      province_id,\n      pandemic_id,\n      date\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getSupplyQuantityAPI = async (province_id, pandemic_id) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY, {\n      province_id,\n      pandemic_id\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getAllEmail = async email => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_ALL_EMAIL, {\n      email\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst addUser = async (email, password) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.ADD_USER, {\n      email,\n      password\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst deleteUser = async email => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.DELETE_USER, {\n      email\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getEpidemicDataOfAllProvincesAPI = async (pandemic_id, date) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_EPIDEMIC_DATA_OF_ALL_PROVINCES, {\n      pandemic_id,\n      date\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getSupplyQuantityOfAllProvincesAPI = async pandemic_id => {\n  try {\n    console.log(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY_OF_ALL_PROVINCES);\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY_OF_ALL_PROVINCES, {\n      pandemic_id\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst clusterAPI = async (U, C, tagField, keys, weightList) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.CLUSTER, {\n      U,\n      C,\n      tagField,\n      keys,\n      weightList\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst insertSupplyAbilityAPI = async data => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.INSERT_SUPPLY_ABILITY, {\n      data\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst getDistributionDataAPI = async (pandemic_id, supply_type_id) => {\n  try {\n    return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_DISTRIBUTION_DATA, {\n      pandemic_id,\n      supply_type_id\n    })).data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport { handleLoginAPI, getPandemicDataAPI, getEpidemicDataAPI, getSupplyQuantityAPI, getAllEmail, addUser, deleteUser, getEpidemicDataOfAllProvincesAPI, getSupplyQuantityOfAllProvincesAPI, clusterAPI, insertSupplyAbilityAPI, getDistributionDataAPI };","map":{"version":3,"names":["axios","PATH_API","handleLoginAPI","email","password","post","BASE_URL","LOGIN_API","data","err","console","log","getPandemicDataAPI","get","GET_PANDEMIC_DATA","getEpidemicDataAPI","province_id","pandemic_id","date","GET_EPIDEMIC_DATA","getSupplyQuantityAPI","GET_SUPPLY_QUANTITY","getAllEmail","GET_ALL_EMAIL","addUser","ADD_USER","deleteUser","DELETE_USER","getEpidemicDataOfAllProvincesAPI","GET_EPIDEMIC_DATA_OF_ALL_PROVINCES","getSupplyQuantityOfAllProvincesAPI","GET_SUPPLY_QUANTITY_OF_ALL_PROVINCES","clusterAPI","U","C","tagField","keys","weightList","CLUSTER","insertSupplyAbilityAPI","INSERT_SUPPLY_ABILITY","getDistributionDataAPI","supply_type_id","GET_DISTRIBUTION_DATA"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/service/userService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PATH_API } from \"../constant/constant\";\r\n\r\nconst handleLoginAPI = async(email, password) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.LOGIN_API, { email, password })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getPandemicDataAPI = async() => {\r\n    try {\r\n        return (await axios.get(PATH_API.BASE_URL + PATH_API.GET_PANDEMIC_DATA)).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getEpidemicDataAPI = async(province_id, pandemic_id, date) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_EPIDEMIC_DATA, { province_id, pandemic_id, date })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getSupplyQuantityAPI = async(province_id, pandemic_id) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY, { province_id, pandemic_id })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getAllEmail = async(email) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_ALL_EMAIL, { email })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst addUser = async(email, password) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.ADD_USER, { email, password })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst deleteUser = async(email) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.DELETE_USER, { email })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getEpidemicDataOfAllProvincesAPI = async(pandemic_id, date) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_EPIDEMIC_DATA_OF_ALL_PROVINCES, { pandemic_id, date })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getSupplyQuantityOfAllProvincesAPI = async(pandemic_id) => {\r\n    try {\r\n        console.log(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY_OF_ALL_PROVINCES);\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_SUPPLY_QUANTITY_OF_ALL_PROVINCES, { pandemic_id })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst clusterAPI = async(U, C, tagField, keys, weightList) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.CLUSTER, { U, C, tagField, keys, weightList })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst insertSupplyAbilityAPI = async(data) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.INSERT_SUPPLY_ABILITY, { data })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getDistributionDataAPI = async(pandemic_id, supply_type_id) => {\r\n    try {\r\n        return (await axios.post(PATH_API.BASE_URL + PATH_API.GET_DISTRIBUTION_DATA, { pandemic_id, supply_type_id })).data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport {\r\n    handleLoginAPI,\r\n    getPandemicDataAPI,\r\n    getEpidemicDataAPI,\r\n    getSupplyQuantityAPI,\r\n    getAllEmail,\r\n    addUser,\r\n    deleteUser,\r\n    getEpidemicDataOfAllProvincesAPI,\r\n    getSupplyQuantityOfAllProvincesAPI,\r\n    clusterAPI,\r\n    insertSupplyAbilityAPI,\r\n    getDistributionDataAPI,\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}