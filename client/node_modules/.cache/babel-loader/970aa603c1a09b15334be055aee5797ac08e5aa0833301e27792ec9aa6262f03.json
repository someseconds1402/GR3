{"ast":null,"code":"var _jsxFileName = \"D:\\\\Don't Click Here\\\\2022_2\\\\code_2\\\\client\\\\src\\\\components\\\\subscreen\\\\guest\\\\EpidemicDisplay.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport { changeEpidemicData, changeEpidemicOption } from '../../../store/reducer/changeEpidemicDataSlice';\n// import { changePandemicData } from '../../../store/reducer/getPandemicDataSlice';\nimport { useState, useEffect } from 'react';\nimport MainFrame from '../../mainframe/MainFrame';\nimport { getEpidemicDataAPI } from '../../../service/userService';\nimport LineChart from '../../chart/LineChart';\nimport Dropdown from '../../dropdown/Dropdown';\nimport province from './../../../constant/province';\nimport MyDatePicker from '../../datepicker/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EpidemicDisplay() {\n  _s();\n  // const EpidemicData = useSelector((state) => state.changeEpidemicData.data);\n  // const pandemicData = useSelector(state => state.getPandemicData.data);\n\n  // Lấy data pandemic từ localstorage\n  const pandemicData = localStorage.getItem('pandemicData').split('2018@4139,.abc/&xyz').filter(item => item !== '').map(e => {\n    const [id, name] = e.split(':');\n    return {\n      pandemic_id: id,\n      pandemic_name: name\n    };\n  });\n  localStorage.setItem('pandemicOption', 1);\n  const dispatch = useDispatch();\n  const [chartData, setChartData] = useState({\n    labels: ['No name'],\n    datasets: [{\n      label: \"No name\",\n      data: [0]\n    }]\n  });\n  const getEpidemicData = async (province_id, pandemic_id, date) => {\n    const data = await getEpidemicDataAPI(province_id, pandemic_id, date);\n    dispatch(changeEpidemicData({\n      data\n    }));\n    setChartData({\n      labels: data.dateRange,\n      datasets: [{\n        label: data.infection.title,\n        data: data.infection.list.map(e => e.quantity_in_today),\n        borderColor: 'blue',\n        backgroundColor: 'blue'\n      }, {\n        label: data.recovered.title,\n        data: data.recovered.list.map(e => e.quantity_in_today),\n        borderColor: 'green',\n        backgroundColor: 'green'\n      }, {\n        label: data.death.title,\n        data: data.death.list.map(e => e.quantity_in_today),\n        borderColor: 'red',\n        backgroundColor: 'red'\n      }]\n    });\n  };\n  const getData = () => {\n    getEpidemicData(24, 2, \"2022-7-18\");\n  };\n  const changeOption = order => {\n    dispatch(changeEpidemicOption({\n      order: order\n    }));\n  };\n  const changePandemic = option => {\n    const province_id = province.indexOf(option) + 1;\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\n    getEpidemicData(localStorage.getItem('epidemicDisplay_selectedProvinceId'), 2, localStorage.getItem('epidemicDisplay_selectedDate'));\n  };\n  const changeProvince = option => {\n    const province_id = province.indexOf(option) + 1;\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\n    getEpidemicData(province_id, 2, localStorage.getItem('epidemicDisplay_selectedDate'));\n  };\n  const changeDate = date => {\n    localStorage.setItem('epidemicDisplay_selectedDate', date);\n    getEpidemicData(localStorage.getItem('epidemicDisplay_selectedProvinceId'), 2, date);\n  };\n  useEffect(() => {\n    // getEpidemicData(2, 2, \"2022-7-18\");\n    // console.log(localStorage.getItem('pandemicData'));\n  });\n  return /*#__PURE__*/_jsxDEV(MainFrame, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tra c\\u1EE9u t\\xECnh h\\xECnh d\\u1ECBch b\\u1EC7nh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 \",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          data: province,\n          func: changeProvince\n          // selectedOption = {parseInt(localStorage.getItem('epidemicDisplay_selectedProvinceId'))}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          data: pandemicData.map(e => e.pandemic_name),\n          func: changePandemic\n          // selectedOption={parseInt(localStorage.getItem('pandemicOption'))}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyDatePicker, {\n          func: changeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-3\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(EpidemicDisplay, \"F4fhND8y71UjkDXgNx5hm2PBvJg=\", false, function () {\n  return [useDispatch];\n});\n_c = EpidemicDisplay;\nexport default EpidemicDisplay;\nvar _c;\n$RefreshReg$(_c, \"EpidemicDisplay\");","map":{"version":3,"names":["useDispatch","changeEpidemicData","changeEpidemicOption","useState","useEffect","MainFrame","getEpidemicDataAPI","LineChart","Dropdown","province","MyDatePicker","jsxDEV","_jsxDEV","EpidemicDisplay","_s","pandemicData","localStorage","getItem","split","filter","item","map","e","id","name","pandemic_id","pandemic_name","setItem","dispatch","chartData","setChartData","labels","datasets","label","data","getEpidemicData","province_id","date","dateRange","infection","title","list","quantity_in_today","borderColor","backgroundColor","recovered","death","getData","changeOption","order","changePandemic","option","indexOf","changeProvince","changeDate","children","fileName","_jsxFileName","lineNumber","columnNumber","className","func","_c","$RefreshReg$"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/components/subscreen/guest/EpidemicDisplay.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { changeEpidemicData, changeEpidemicOption } from '../../../store/reducer/changeEpidemicDataSlice';\r\n// import { changePandemicData } from '../../../store/reducer/getPandemicDataSlice';\r\nimport { useState, useEffect } from 'react';\r\nimport MainFrame from '../../mainframe/MainFrame'\r\nimport { getEpidemicDataAPI } from '../../../service/userService'\r\nimport LineChart from '../../chart/LineChart';\r\nimport Dropdown from '../../dropdown/Dropdown';\r\nimport province from './../../../constant/province'\r\nimport MyDatePicker from '../../datepicker/DatePicker';\r\n\r\nfunction EpidemicDisplay() {\r\n  // const EpidemicData = useSelector((state) => state.changeEpidemicData.data);\r\n  // const pandemicData = useSelector(state => state.getPandemicData.data);\r\n\r\n  // Lấy data pandemic từ localstorage\r\n  const pandemicData = (localStorage.getItem('pandemicData'))\r\n    .split('2018@4139,.abc/&xyz')\r\n    .filter((item) => item !== '')\r\n    .map(e=>{\r\n      const [id, name] = e.split(':');\r\n      return {\r\n        pandemic_id: id,\r\n        pandemic_name: name,\r\n      }\r\n    });\r\n    localStorage.setItem('pandemicOption', 1);\r\n\r\n  const dispatch = useDispatch();\r\n  const [chartData, setChartData] = useState({\r\n    labels: ['No name'],\r\n    datasets: [\r\n      {\r\n        label: \"No name\",\r\n        data: [0],\r\n      }\r\n    ]\r\n  });\r\n\r\n  const getEpidemicData = async (province_id, pandemic_id, date) => {\r\n    const data = await getEpidemicDataAPI(province_id, pandemic_id, date);\r\n    dispatch(changeEpidemicData({data}));\r\n    setChartData({\r\n      labels: data.dateRange,\r\n      datasets: [\r\n        {\r\n          label: data.infection.title,\r\n          data: data.infection.list.map(e=>e.quantity_in_today),\r\n          borderColor: 'blue',\r\n          backgroundColor: 'blue'\r\n        },\r\n        {\r\n          label: data.recovered.title,\r\n          data: data.recovered.list.map(e=>e.quantity_in_today),\r\n          borderColor: 'green',\r\n          backgroundColor: 'green'\r\n        },\r\n        {\r\n          label: data.death.title,\r\n          data: data.death.list.map(e=>e.quantity_in_today),\r\n          borderColor: 'red',\r\n          backgroundColor: 'red'\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  const getData = ()=>{\r\n    getEpidemicData(24, 2, \"2022-7-18\");\r\n  }\r\n\r\n  const changeOption = (order) => {\r\n    dispatch(changeEpidemicOption({order: order}));\r\n  }\r\n\r\n  const changePandemic = (option)=>{\r\n    const province_id = province.indexOf(option) + 1;\r\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\r\n    getEpidemicData(\r\n      localStorage.getItem('epidemicDisplay_selectedProvinceId'), \r\n      2, \r\n      localStorage.getItem('epidemicDisplay_selectedDate')\r\n    );\r\n  }\r\n\r\n  const changeProvince = (option)=>{\r\n    const province_id = province.indexOf(option) + 1;\r\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\r\n    getEpidemicData(\r\n      province_id, \r\n      2, \r\n      localStorage.getItem('epidemicDisplay_selectedDate')\r\n    );\r\n  }\r\n\r\n  const changeDate = (date) => {\r\n    localStorage.setItem('epidemicDisplay_selectedDate', date);\r\n    getEpidemicData(\r\n      localStorage.getItem('epidemicDisplay_selectedProvinceId'),\r\n      2, \r\n      date\r\n    );\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // getEpidemicData(2, 2, \"2022-7-18\");\r\n    // console.log(localStorage.getItem('pandemicData'));\r\n  })\r\n\r\n  return (\r\n    <MainFrame>\r\n      <h1>Tra cứu tình hình dịch bệnh</h1>\r\n      <div className=\"grid grid-cols-4 gap-4 mt-5\">\r\n        <div className=\"col-span-1 \">\r\n          <Dropdown \r\n            data={province} func={changeProvince} \r\n            // selectedOption = {parseInt(localStorage.getItem('epidemicDisplay_selectedProvinceId'))}\r\n          />\r\n          <Dropdown data={pandemicData.map(e=>e.pandemic_name)} func={changePandemic} \r\n            // selectedOption={parseInt(localStorage.getItem('pandemicOption'))}\r\n          />\r\n          <MyDatePicker func={changeDate}/>\r\n        </div>\r\n        <div className=\"col-span-3\">\r\n          <LineChart data={chartData} />\r\n        </div>\r\n      </div>\r\n    </MainFrame>\r\n  )\r\n}\r\n\r\nexport default EpidemicDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}