{"ast":null,"code":"var _jsxFileName = \"D:\\\\Don't Click Here\\\\2022_2\\\\code_2\\\\client\\\\src\\\\components\\\\subscreen\\\\expert\\\\SupplyAnalyse_New.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MainFrame from '../../mainframe/MainFrame';\nimport { useNavigate } from 'react-router-dom';\nimport { PATH } from '../../../constant/constant';\nimport { getPandemicDataAPI, getSupplyQuantityOfAllProvincesAPI, clusterAPI } from '../../../service/userService';\nimport Dropdown from '../../dropdown/Dropdown';\nimport province from '../../../constant/province';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeSupplyDataAnalyse, sortWithAbility, resetAllAbility } from '../../../store/reducer/supplyDataAnalyseSlice';\nimport { enebleLoadingScreen, disableLoadingScreen } from '../../../store/reducer/showLoadingScreenSlice';\n\n// Excel\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport SupplyTable_New from './supplytable/SupplyTable_New';\n// import S_SMC_FCM from '../../../logic/sSMC_FCM';\nimport WeightTableSupply from './supplytable/WeightTableSupply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SupplyAnalyse_New() {\n  _s();\n  const navigate = useNavigate();\n  const SupplyData = useSelector(state => state.supplyDataAnalyse.data);\n  const dispatch = useDispatch();\n  const [superData, setSuperData] = useState([]);\n  const [pandemicData, setPandemicData] = useState([]);\n  const [pandemicSelect, setPandemicSelect] = useState(0);\n  const [showWeightTable, setShowWeightTable] = useState(false);\n  const [showResetData, setShowResetData] = useState(false);\n  const [weight, setWeight] = useState([0.1, 0.1, 0.1, 0.1]);\n  const [isShowWeight, setIsShowWeight] = useState(false);\n  const [showTip, setShowTip] = useState(false);\n  const [supplyType, setSupplyType] = useState([{\n    id: -1,\n    name: 'Chưa có dữ liệu'\n  }]);\n  const [supplyTypeSelect, setSupplyTypeSelect] = useState(-1);\n  const [weightList, setWeightList] = useState({\n    // supply_quatity: 1,\n    supply_quatity_per_person: 1,\n    population: 1,\n    population_density: 1,\n    level: 1\n  });\n  const weightLabel = [\n  // 'supply_quatity',\n  'supply_quatity_per_person', 'population', 'population_density', 'level'];\n  const changePandemic = option => {\n    setPandemicSelect(pandemicData.find(e => e.pandemic_name == option).pandemic_id);\n  };\n  const changeSupplyType = option => {\n    setSupplyTypeSelect(supplyType.find(e => e.name == option).id);\n  };\n  const changeIsShowWeight = event => {\n    setIsShowWeight(event.target.checked);\n  };\n  const closeDialog = data => {\n    // console.log(data);\n    if (data) {\n      setWeight(data);\n      let weightListTmp = weightList;\n      weightLabel.forEach((e, index) => {\n        weightListTmp[e] = data[index];\n      });\n      setWeightList(weightListTmp);\n      // console.log(weightList);\n    }\n\n    setShowWeightTable(false);\n  };\n  const Clust = async () => {\n    // console.log(SupplyData);\n    let U = SupplyData.map(e => {\n      return {\n        province_id: e.province_id,\n        province_name: e.province_name,\n        population: e.population / 1000000,\n        population_density: e.population_density,\n        level: e.level,\n        supply_name: e.supply_name,\n        supply_quantity: e.supply_quantity,\n        supply_quatity_per_person: e.supply_quatity_per_person,\n        ability: e.ability\n      };\n    });\n    const C = [1, 2, 3]; // Danh sách các nhãn cần phân cụm\n\n    const tagField = 'ability'; // Trường dữ liệu chứa nhãn\n\n    const keys = ['province_name', 'province_id', 'supply_name', 'supply_quantity']; // Các trường dữ liệu không tham gia vào việc phân cụm\n\n    dispatch(enebleLoadingScreen());\n    clusterAPI(U, C, tagField, keys, weightList).then(data => {\n      // console.log(data);\n      dispatch(changeSupplyDataAnalyse({\n        data: data.map(e => {\n          return {\n            province_id: e.province_id,\n            province_name: e.province_name,\n            population: e.population * 1000000,\n            population_density: e.population_density,\n            level: e.level,\n            supply_name: e.supply_name,\n            supply_quantity: e.supply_quantity,\n            supply_quatity_per_person: e.supply_quatity_per_person,\n            ability: e.cluster_label\n          };\n        })\n      }));\n      dispatch(sortWithAbility());\n      dispatch(disableLoadingScreen());\n      setShowResetData(true);\n    }).catch(error => {\n      console.error('Đã xảy ra lỗi:', error);\n    });\n  };\n  const resetData = () => {\n    dispatch(resetAllAbility());\n    setShowResetData(false);\n  };\n  const downloadFile = () => {\n    const currentTime = new Date().getTime();\n    const fileName = `SupplyAnalyse_${currentTime}.xlsx`;\n    // Tạo workbook mới\n    const workbook = XLSX.utils.book_new();\n\n    // Convert data to worksheet format\n    console.log(SupplyData);\n    const worksheet = XLSX.utils.json_to_sheet(SupplyData.map(e => {\n      return {\n        pandemic_id: pandemicSelect,\n        pandemic_name: pandemicData.find(m => m.pandemic_id == pandemicSelect).pandemic_name,\n        province_id: e.province_id,\n        province_name: e.province_name,\n        supply_type_id: supplyTypeSelect,\n        supply_name: e.supply_name,\n        supply_quantity: e.supply_quantity,\n        ability: e.ability\n      };\n    }));\n    // console.log(fileName, workbook, worksheet);\n    // Append worksheet to workbook\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\n    // Write workbook to Excel file\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'buffer'\n    });\n    // Create a Blob from the buffer\n    const blob = new Blob([excelBuffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    });\n    // Download the file\n    saveAs(blob, fileName);\n  };\n  useEffect(() => {\n    if (localStorage.getItem('role') != 1) {\n      navigate(PATH.HOME);\n    }\n    const fetchData = async () => {\n      try {\n        const pandemicDataSrevice = await getPandemicDataAPI();\n        setPandemicData(pandemicDataSrevice);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getSupplyQuantityOfAllProvincesAPI(pandemicSelect);\n        console.log(data, pandemicData);\n        setSupplyTypeSelect(-1);\n        setSupplyType(data.listSupplyType.length > 0 ? data.listSupplyType : [{\n          id: -1,\n          name: 'Chưa có dữ liệu'\n        }]);\n        data.data.forEach(e => {\n          if (!e.ability) {\n            e.ability = 0;\n          }\n        });\n        setSuperData(data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    dispatch(enebleLoadingScreen());\n    fetchData();\n    dispatch(disableLoadingScreen());\n  }, [pandemicSelect]);\n  useEffect(() => {\n    setSupplyTypeSelect(supplyType[0].id);\n  }, [supplyType]);\n  useEffect(() => {\n    // console.log(superData);\n    const data = superData.map(dt => {\n      let supply_name = '',\n        supply_quantity = 0,\n        supply_quatity_per_person = 0;\n      if (supplyTypeSelect != -1 && dt.data.length > 0) {\n        const findItem = dt.data.find(e => e.supply_type_id == supplyTypeSelect);\n        supply_name = findItem.supply_type_name;\n        supply_quantity = findItem.supply_quantity;\n        supply_quatity_per_person = parseFloat((supply_quantity / dt.population).toFixed(2));\n      }\n      return {\n        province_id: dt.province_id,\n        province_name: province[dt.province_id - 1],\n        population: dt.population,\n        population_density: dt.population_density,\n        level: dt.level,\n        ability: dt.ability,\n        supply_name: supply_name,\n        supply_quantity: supply_quantity,\n        supply_quatity_per_person: supply_quatity_per_person\n      };\n    });\n    // console.log(data);\n    dispatch(changeSupplyDataAnalyse({\n      data: data\n    }));\n  }, [superData, supplyTypeSelect]);\n  return /*#__PURE__*/_jsxDEV(MainFrame, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ph\\xE2n t\\xEDch kh\\u1EA3 n\\u0103ng h\\u1ED7 tr\\u1EE3 VTYT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          data: pandemicData.map(e => e.pandemic_name),\n          func: changePandemic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            data: supplyType.map(e => e.name),\n            func: changeSupplyType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-lg flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"h-6 w-6\",\n              type: \"checkbox\",\n              checked: isShowWeight,\n              onChange: changeIsShowWeight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-1\",\n              children: \"Xem tr\\u1ECDng s\\u1ED1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 cursor-pointer\",\n          onClick: () => {\n            setShowTip(!showTip);\n          },\n          children: showTip ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" text-green-900\",\n            children: [\"V\\u1EDBi c\\xE1c lo\\u1EA1i v\\u1EADt t\\u01B0 y t\\u1EBF nh\\u01B0 v\\u1EAFc xin ho\\u1EB7c kit test, vi\\u1EC7c \\u0111\\xE1nh gi\\xE1 kh\\u1EA3 n\\u0103ng h\\u1ED7 tr\\u1EE3 VTYT c\\xF3 th\\u1EC3 tham kh\\u1EA3o c\\xF4ng th\\u1EE9c sau:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), \"Gi\\xE1 tr\\u1ECB \\u0111\\xE1nh gi\\xE1 = \\u03B1 * (S\\u1ED1 l\\u01B0\\u1EE3ng VTYT /ng\\u01B0\\u1EDDi)/(M\\u1EADt \\u0111\\u1ED9 d\\xE2n c\\u01B0 * C\\u1EA5p \\u0111\\u1ED9 d\\u1ECBch).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), \"V\\u1EDBi \\u03B1 l\\xE0 h\\u1EC7 s\\u1ED1 do chuy\\xEAn vi\\xEAn quy\\u1EBFt \\u0111\\u1ECBnh.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), \"M\\u1ED9t t\\u1EC9nh th\\xE0nh ph\\u1ED1 \\u0111\\u01B0\\u1EE3c \\u0111\\xE1nh gi\\xE1 l\\xE0 t\\u1EF1 cung \\u1EE9ng n\\u1EBFu 0.1 < Gi\\xE1 tr\\u1ECB \\u0111\\xE1nh gi\\xE1 < 0.15\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), \"N\\u1EBFu nh\\u1ECF h\\u01A1n 0.1 s\\u1EBD \\u0111\\u01B0\\u1EE3c coi l\\xE0 c\\u1EA7n h\\u1ED7 tr\\u1EE3 VTYT, n\\u1EBFu l\\u1EDBn h\\u01A1n 0.15 s\\u1EBD \\u0111\\u01B0\\u1EE3c coi l\\xE0 c\\xF3 th\\u1EC3 h\\u1ED7 tr\\u1EE3 VTYT t\\u1EDBi c\\xE1c t\\u1EC9nh th\\xE0nh kh\\xE1c.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-blue-500 underline\",\n            children: \"Xem g\\u1EE3i \\xFD \\u0111\\xE1nh gi\\xE1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary w-full \" + (supplyTypeSelect == -1 ? 'disabled' : ''),\n          onClick: () => {\n            setShowWeightTable(true);\n          },\n          children: \"Thi\\u1EBFt l\\u1EADp tr\\u1ECDng s\\u1ED1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), showWeightTable && /*#__PURE__*/_jsxDEV(WeightTableSupply, {\n          data: weight,\n          supplyTypeSelect: supplyType.find(e => e.id == supplyTypeSelect).name,\n          func: closeDialog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 31\n        }, this), !showResetData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary w-full mt-4 \" + (supplyTypeSelect == -1 ? 'disabled' : ''),\n          onClick: Clust,\n          children: \"Ph\\xE2n c\\u1EE5m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-success w-full mt-4\",\n          onClick: resetData,\n          children: \"Reset d\\u1EEF li\\u1EC7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-success w-full mt-4\",\n          onClick: downloadFile,\n          children: \"Download d\\u1EEF li\\u1EC7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), supplyTypeSelect != -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(SupplyTable_New, {\n        weightData: weight,\n        isShowWeight: isShowWeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(SupplyAnalyse_New, \"RXIVujsWju0GRgfJuVUYr6+TWcs=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = SupplyAnalyse_New;\nexport default SupplyAnalyse_New;\nvar _c;\n$RefreshReg$(_c, \"SupplyAnalyse_New\");","map":{"version":3,"names":["useState","useEffect","MainFrame","useNavigate","PATH","getPandemicDataAPI","getSupplyQuantityOfAllProvincesAPI","clusterAPI","Dropdown","province","useSelector","useDispatch","changeSupplyDataAnalyse","sortWithAbility","resetAllAbility","enebleLoadingScreen","disableLoadingScreen","XLSX","saveAs","SupplyTable_New","WeightTableSupply","jsxDEV","_jsxDEV","SupplyAnalyse_New","_s","navigate","SupplyData","state","supplyDataAnalyse","data","dispatch","superData","setSuperData","pandemicData","setPandemicData","pandemicSelect","setPandemicSelect","showWeightTable","setShowWeightTable","showResetData","setShowResetData","weight","setWeight","isShowWeight","setIsShowWeight","showTip","setShowTip","supplyType","setSupplyType","id","name","supplyTypeSelect","setSupplyTypeSelect","weightList","setWeightList","supply_quatity_per_person","population","population_density","level","weightLabel","changePandemic","option","find","e","pandemic_name","pandemic_id","changeSupplyType","changeIsShowWeight","event","target","checked","closeDialog","weightListTmp","forEach","index","Clust","U","map","province_id","province_name","supply_name","supply_quantity","ability","C","tagField","keys","then","cluster_label","catch","error","console","resetData","downloadFile","currentTime","Date","getTime","fileName","workbook","utils","book_new","log","worksheet","json_to_sheet","m","supply_type_id","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","localStorage","getItem","HOME","fetchData","pandemicDataSrevice","listSupplyType","length","dt","findItem","supply_type_name","parseFloat","toFixed","children","_jsxFileName","lineNumber","columnNumber","className","func","onChange","onClick","weightData","_c","$RefreshReg$"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/components/subscreen/expert/SupplyAnalyse_New.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport MainFrame from '../../mainframe/MainFrame'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PATH } from '../../../constant/constant';\r\nimport { getPandemicDataAPI, getSupplyQuantityOfAllProvincesAPI, clusterAPI } from '../../../service/userService'\r\nimport Dropdown from '../../dropdown/Dropdown';\r\nimport province from '../../../constant/province'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeSupplyDataAnalyse, sortWithAbility, resetAllAbility } from '../../../store/reducer/supplyDataAnalyseSlice';\r\nimport { enebleLoadingScreen, disableLoadingScreen } from '../../../store/reducer/showLoadingScreenSlice';\r\n\r\n// Excel\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport SupplyTable_New from './supplytable/SupplyTable_New';\r\n// import S_SMC_FCM from '../../../logic/sSMC_FCM';\r\nimport WeightTableSupply from './supplytable/WeightTableSupply';\r\n\r\nfunction SupplyAnalyse_New() {\r\n  const navigate = useNavigate();\r\n  const SupplyData = useSelector((state) => state.supplyDataAnalyse.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const [superData, setSuperData] = useState([]);\r\n  const [pandemicData, setPandemicData] = useState([]);\r\n  \r\n  const [pandemicSelect, setPandemicSelect] = useState(0);\r\n\r\n  const [showWeightTable, setShowWeightTable] = useState(false);\r\n  const [showResetData, setShowResetData] = useState(false);\r\n  const [weight, setWeight] = useState([0.1,0.1,0.1,0.1]);\r\n  const [isShowWeight, setIsShowWeight] = useState(false);\r\n  const [showTip, setShowTip] = useState(false);\r\n\r\n  const [supplyType, setSupplyType] = useState([{id: -1, name: 'Chưa có dữ liệu'}]);\r\n  const [supplyTypeSelect, setSupplyTypeSelect] = useState(-1);\r\n\r\n  const [weightList, setWeightList] = useState({\r\n    // supply_quatity: 1,\r\n    supply_quatity_per_person: 1,\r\n    population: 1,\r\n    population_density: 1,\r\n    level: 1,\r\n  });\r\n\r\n  const weightLabel = [\r\n    // 'supply_quatity',\r\n    'supply_quatity_per_person',\r\n    'population',\r\n    'population_density',\r\n    'level',\r\n  ]\r\n\r\n  const changePandemic = (option) => {\r\n    setPandemicSelect(pandemicData.find(e=>e.pandemic_name==option).pandemic_id);\r\n  }\r\n\r\n  const changeSupplyType = (option) => {\r\n    setSupplyTypeSelect(supplyType.find(e=>e.name==option).id);\r\n  }\r\n\r\n  const changeIsShowWeight = (event) => {\r\n    setIsShowWeight(event.target.checked);\r\n  }\r\n\r\n  const closeDialog = (data)=>{\r\n    // console.log(data);\r\n    if(data){\r\n      setWeight(data);\r\n      let weightListTmp = weightList;\r\n      weightLabel.forEach((e, index)=>{\r\n        weightListTmp[e] = data[index];\r\n      });\r\n      setWeightList(weightListTmp);\r\n      // console.log(weightList);\r\n    }\r\n    setShowWeightTable(false);\r\n  }\r\n\r\n  const Clust = async () => {\r\n    // console.log(SupplyData);\r\n    let U = SupplyData.map(e=>{\r\n      return {\r\n        province_id: e.province_id,\r\n        province_name: e.province_name,\r\n        population: (e.population)/1000000,\r\n        population_density: e.population_density,\r\n        level: e.level,\r\n        supply_name: e.supply_name,\r\n        supply_quantity: e.supply_quantity,\r\n        supply_quatity_per_person: e.supply_quatity_per_person,\r\n        ability: e.ability,\r\n      }\r\n    });\r\n    const C = [1, 2, 3]; // Danh sách các nhãn cần phân cụm\r\n    \r\n    const tagField = 'ability'; // Trường dữ liệu chứa nhãn\r\n    \r\n    const keys = ['province_name', 'province_id', 'supply_name', 'supply_quantity']; // Các trường dữ liệu không tham gia vào việc phân cụm\r\n    \r\n    dispatch(enebleLoadingScreen());\r\n    clusterAPI(U, C, tagField, keys, weightList)\r\n      .then(data => {\r\n        // console.log(data);\r\n        dispatch(changeSupplyDataAnalyse({data: data.map(e=>{\r\n          return {\r\n            province_id: e.province_id,\r\n            province_name: e.province_name,\r\n            population: (e.population)*1000000,\r\n            population_density: e.population_density,\r\n            level: e.level,\r\n            supply_name: e.supply_name,\r\n            supply_quantity: e.supply_quantity,\r\n            supply_quatity_per_person: e.supply_quatity_per_person,\r\n            ability: e.cluster_label,\r\n          }\r\n        })}))\r\n        dispatch(sortWithAbility())\r\n        dispatch(disableLoadingScreen());\r\n        setShowResetData(true);\r\n      })\r\n      .catch(error => {\r\n        console.error('Đã xảy ra lỗi:', error);\r\n      });\r\n  }\r\n\r\n  const resetData = () => {\r\n    dispatch(resetAllAbility());\r\n    setShowResetData(false);\r\n  }\r\n\r\n  const downloadFile = () => {\r\n    const currentTime = new Date().getTime();\r\n    const fileName = `SupplyAnalyse_${currentTime}.xlsx`;\r\n    // Tạo workbook mới\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // Convert data to worksheet format\r\n    console.log(SupplyData);\r\n    const worksheet = XLSX.utils.json_to_sheet(SupplyData.map(e=>{\r\n      return {\r\n        pandemic_id: pandemicSelect,\r\n        pandemic_name: pandemicData.find(m=>m.pandemic_id==pandemicSelect).pandemic_name,\r\n        province_id: e.province_id,\r\n        province_name: e.province_name,\r\n        supply_type_id: supplyTypeSelect,\r\n        supply_name: e.supply_name,\r\n        supply_quantity: e.supply_quantity,\r\n        ability: e.ability,\r\n      }\r\n    }));\r\n    // console.log(fileName, workbook, worksheet);\r\n    // Append worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n    // Write workbook to Excel file\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    // Create a Blob from the buffer\r\n    const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n    // Download the file\r\n    saveAs(blob, fileName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('role') != 1){\r\n      navigate(PATH.HOME);\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        const pandemicDataSrevice = await getPandemicDataAPI();\r\n        setPandemicData(pandemicDataSrevice);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getSupplyQuantityOfAllProvincesAPI(pandemicSelect);\r\n        console.log(data, pandemicData);\r\n        setSupplyTypeSelect(-1);\r\n        setSupplyType(data.listSupplyType.length > 0 ? \r\n          data.listSupplyType : [{id: -1, name: 'Chưa có dữ liệu'}]);\r\n\r\n        data.data.forEach(e=>{\r\n          if(!e.ability){\r\n            e.ability = 0;\r\n          }\r\n        })\r\n        setSuperData(data.data);\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    dispatch(enebleLoadingScreen());\r\n    fetchData();\r\n    dispatch(disableLoadingScreen());\r\n  }, [pandemicSelect]);\r\n\r\n  useEffect(()=>{\r\n    setSupplyTypeSelect(supplyType[0].id);\r\n  }, [supplyType])\r\n\r\n  useEffect(()=>{\r\n    // console.log(superData);\r\n    const data = superData.map(dt=>{\r\n      let supply_name = '', supply_quantity = 0, supply_quatity_per_person = 0;\r\n      if(supplyTypeSelect != -1 && dt.data.length > 0){\r\n        const findItem = dt.data.find(e=>e.supply_type_id==supplyTypeSelect);\r\n        supply_name = findItem.supply_type_name;\r\n        supply_quantity = findItem.supply_quantity;\r\n        supply_quatity_per_person = parseFloat((supply_quantity/dt.population).toFixed(2));\r\n      }\r\n      return {\r\n        province_id: dt.province_id,\r\n        province_name: province[dt.province_id-1],\r\n        population: dt.population,\r\n        population_density: dt.population_density,\r\n        level: dt.level,\r\n        ability: dt.ability,\r\n        supply_name: supply_name,\r\n        supply_quantity: supply_quantity,\r\n        supply_quatity_per_person: supply_quatity_per_person,\r\n      }\r\n    });\r\n    // console.log(data);\r\n    dispatch(changeSupplyDataAnalyse({data: data}));\r\n  }, [superData, supplyTypeSelect])\r\n\r\n  return (\r\n    <MainFrame>\r\n      <h1>Phân tích khả năng hỗ trợ VTYT</h1>\r\n      <div className=\"grid grid-cols-3 gap-4 mt-5\">\r\n        <div className=\"col-span-1\">\r\n          <Dropdown data={pandemicData.map(e=>e.pandemic_name)} func={changePandemic}/>\r\n          <div className=\"mt-4\"><Dropdown data={supplyType.map(e=>e.name)} func={changeSupplyType}/></div>\r\n          <div className=\"w-full mt-4\">\r\n            <label className='text-lg flex items-center'>\r\n              <input className='h-6 w-6' type=\"checkbox\" checked={isShowWeight} onChange={changeIsShowWeight} />\r\n              <span className='ml-1'>Xem trọng số</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"mt-4 cursor-pointer\" onClick={()=>{setShowTip(!showTip)}}>\r\n            {showTip ? \r\n            <div className=\" text-green-900\">\r\n              Với các loại vật tư y tế như vắc xin hoặc kit test, \r\n              việc đánh giá khả năng hỗ trợ VTYT có thể tham khảo công thức sau: \r\n              <br />Giá trị đánh giá = α * (Số lượng VTYT /người)/(Mật độ dân cư * Cấp độ dịch). \r\n              <br />Với α là hệ số do chuyên viên quyết định. \r\n              <br />Một tỉnh thành phố được đánh giá là tự cung ứng nếu 0.1 &lt; Giá trị đánh giá &lt; 0.15\r\n              <br />Nếu nhỏ hơn 0.1 sẽ được coi là cần hỗ trợ VTYT, nếu lớn hơn 0.15 sẽ được coi là có thể hỗ trợ VTYT tới các tỉnh thành khác.\r\n            </div> : <div className=\"text-blue-500 underline\">Xem gợi ý đánh giá</div>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-1\"></div>\r\n        <div className=\"col-span-1\">\r\n          <div className={\"btn btn-primary w-full \"+(supplyTypeSelect==-1?'disabled':'')} onClick={()=>{setShowWeightTable(true)}}>Thiết lập trọng số</div>\r\n          {showWeightTable && <WeightTableSupply data={weight} supplyTypeSelect={supplyType.find(e=>e.id==supplyTypeSelect).name} func={closeDialog} />}\r\n          {!showResetData ?\r\n            <div className={\"btn btn-primary w-full mt-4 \"+(supplyTypeSelect==-1?'disabled':'')} onClick={Clust}>Phân cụm</div>\r\n            :\r\n            <div className=\"btn btn-success w-full mt-4\" onClick={resetData}>Reset dữ liệu</div>\r\n          }\r\n          <div className=\"btn btn-success w-full mt-4\" onClick={downloadFile}>Download dữ liệu</div>\r\n        </div>\r\n      </div>\r\n      {supplyTypeSelect!=-1 && <div className=\"mt-5\">\r\n        <SupplyTable_New weightData={weight} isShowWeight={isShowWeight} />\r\n      </div>}\r\n      \r\n    </MainFrame>\r\n  )\r\n}\r\n\r\nexport default SupplyAnalyse_New"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,4BAA4B;AACjD,SAASC,kBAAkB,EAAEC,kCAAkC,EAAEC,UAAU,QAAQ,8BAA8B;AACjH,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,uBAAuB,EAAEC,eAAe,EAAEC,eAAe,QAAQ,+CAA+C;AACzH,SAASC,mBAAmB,EAAEC,oBAAoB,QAAQ,+CAA+C;;AAEzG;AACA,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D;AACA,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAMuB,UAAU,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,iBAAiB,CAACC,IAAI,CAAC;EACvE,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACuC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;EACvD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,CAAC;IAACiD,EAAE,EAAE,CAAC,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,CAAC,CAAC;EACjF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAM,CAACqD,UAAU,EAAEC,aAAa,CAAC,GAAGtD,QAAQ,CAAC;IAC3C;IACAuD,yBAAyB,EAAE,CAAC;IAC5BC,UAAU,EAAE,CAAC;IACbC,kBAAkB,EAAE,CAAC;IACrBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAG;EAClB;EACA,2BAA2B,EAC3B,YAAY,EACZ,oBAAoB,EACpB,OAAO,CACR;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjCzB,iBAAiB,CAACH,YAAY,CAAC6B,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,aAAa,IAAEH,MAAM,CAAC,CAACI,WAAW,CAAC;EAC9E,CAAC;EAED,MAAMC,gBAAgB,GAAIL,MAAM,IAAK;IACnCT,mBAAmB,CAACL,UAAU,CAACe,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACb,IAAI,IAAEW,MAAM,CAAC,CAACZ,EAAE,CAAC;EAC5D,CAAC;EAED,MAAMkB,kBAAkB,GAAIC,KAAK,IAAK;IACpCxB,eAAe,CAACwB,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;EACvC,CAAC;EAED,MAAMC,WAAW,GAAI1C,IAAI,IAAG;IAC1B;IACA,IAAGA,IAAI,EAAC;MACNa,SAAS,CAACb,IAAI,CAAC;MACf,IAAI2C,aAAa,GAAGnB,UAAU;MAC9BM,WAAW,CAACc,OAAO,CAAC,CAACV,CAAC,EAAEW,KAAK,KAAG;QAC9BF,aAAa,CAACT,CAAC,CAAC,GAAGlC,IAAI,CAAC6C,KAAK,CAAC;MAChC,CAAC,CAAC;MACFpB,aAAa,CAACkB,aAAa,CAAC;MAC5B;IACF;;IACAlC,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMqC,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB;IACA,IAAIC,CAAC,GAAGlD,UAAU,CAACmD,GAAG,CAACd,CAAC,IAAE;MACxB,OAAO;QACLe,WAAW,EAAEf,CAAC,CAACe,WAAW;QAC1BC,aAAa,EAAEhB,CAAC,CAACgB,aAAa;QAC9BvB,UAAU,EAAGO,CAAC,CAACP,UAAU,GAAE,OAAO;QAClCC,kBAAkB,EAAEM,CAAC,CAACN,kBAAkB;QACxCC,KAAK,EAAEK,CAAC,CAACL,KAAK;QACdsB,WAAW,EAAEjB,CAAC,CAACiB,WAAW;QAC1BC,eAAe,EAAElB,CAAC,CAACkB,eAAe;QAClC1B,yBAAyB,EAAEQ,CAAC,CAACR,yBAAyB;QACtD2B,OAAO,EAAEnB,CAAC,CAACmB;MACb,CAAC;IACH,CAAC,CAAC;IACF,MAAMC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAErB,MAAMC,QAAQ,GAAG,SAAS,CAAC,CAAC;;IAE5B,MAAMC,IAAI,GAAG,CAAC,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC;;IAEjFvD,QAAQ,CAACf,mBAAmB,CAAC,CAAC,CAAC;IAC/BR,UAAU,CAACqE,CAAC,EAAEO,CAAC,EAAEC,QAAQ,EAAEC,IAAI,EAAEhC,UAAU,CAAC,CACzCiC,IAAI,CAACzD,IAAI,IAAI;MACZ;MACAC,QAAQ,CAAClB,uBAAuB,CAAC;QAACiB,IAAI,EAAEA,IAAI,CAACgD,GAAG,CAACd,CAAC,IAAE;UAClD,OAAO;YACLe,WAAW,EAAEf,CAAC,CAACe,WAAW;YAC1BC,aAAa,EAAEhB,CAAC,CAACgB,aAAa;YAC9BvB,UAAU,EAAGO,CAAC,CAACP,UAAU,GAAE,OAAO;YAClCC,kBAAkB,EAAEM,CAAC,CAACN,kBAAkB;YACxCC,KAAK,EAAEK,CAAC,CAACL,KAAK;YACdsB,WAAW,EAAEjB,CAAC,CAACiB,WAAW;YAC1BC,eAAe,EAAElB,CAAC,CAACkB,eAAe;YAClC1B,yBAAyB,EAAEQ,CAAC,CAACR,yBAAyB;YACtD2B,OAAO,EAAEnB,CAAC,CAACwB;UACb,CAAC;QACH,CAAC;MAAC,CAAC,CAAC,CAAC;MACLzD,QAAQ,CAACjB,eAAe,CAAC,CAAC,CAAC;MAC3BiB,QAAQ,CAACd,oBAAoB,CAAC,CAAC,CAAC;MAChCwB,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDgD,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,CAAC;EACN,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtB7D,QAAQ,CAAChB,eAAe,CAAC,CAAC,CAAC;IAC3B0B,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMoD,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAI,iBAAgBH,WAAY,OAAM;IACpD;IACA,MAAMI,QAAQ,GAAGhF,IAAI,CAACiF,KAAK,CAACC,QAAQ,CAAC,CAAC;;IAEtC;IACAT,OAAO,CAACU,GAAG,CAAC1E,UAAU,CAAC;IACvB,MAAM2E,SAAS,GAAGpF,IAAI,CAACiF,KAAK,CAACI,aAAa,CAAC5E,UAAU,CAACmD,GAAG,CAACd,CAAC,IAAE;MAC3D,OAAO;QACLE,WAAW,EAAE9B,cAAc;QAC3B6B,aAAa,EAAE/B,YAAY,CAAC6B,IAAI,CAACyC,CAAC,IAAEA,CAAC,CAACtC,WAAW,IAAE9B,cAAc,CAAC,CAAC6B,aAAa;QAChFc,WAAW,EAAEf,CAAC,CAACe,WAAW;QAC1BC,aAAa,EAAEhB,CAAC,CAACgB,aAAa;QAC9ByB,cAAc,EAAErD,gBAAgB;QAChC6B,WAAW,EAAEjB,CAAC,CAACiB,WAAW;QAC1BC,eAAe,EAAElB,CAAC,CAACkB,eAAe;QAClCC,OAAO,EAAEnB,CAAC,CAACmB;MACb,CAAC;IACH,CAAC,CAAC,CAAC;IACH;IACA;IACAjE,IAAI,CAACiF,KAAK,CAACO,iBAAiB,CAACR,QAAQ,EAAEI,SAAS,EAAE,MAAM,CAAC;IACzD;IACA,MAAMK,WAAW,GAAGzF,IAAI,CAAC0F,KAAK,CAACV,QAAQ,EAAE;MAAEW,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAS,CAAC,CAAC;IAC9E;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAoE,CAAC,CAAC;IACnH;IACA3F,MAAM,CAAC4F,IAAI,EAAEd,QAAQ,CAAC;EACxB,CAAC;EAED/F,SAAS,CAAC,MAAM;IACd,IAAG+G,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC;MACnCxF,QAAQ,CAACrB,IAAI,CAAC8G,IAAI,CAAC;IACrB;IACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,mBAAmB,GAAG,MAAM/G,kBAAkB,CAAC,CAAC;QACtD6B,eAAe,CAACkF,mBAAmB,CAAC;MACtC,CAAC,CAAC,OAAO3B,KAAK,EAAE;QACdC,OAAO,CAACU,GAAG,CAACX,KAAK,CAAC;MACpB;IACF,CAAC;IACD0B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENlH,SAAS,CAAC,MAAM;IACd,MAAMkH,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMtF,IAAI,GAAG,MAAMvB,kCAAkC,CAAC6B,cAAc,CAAC;QACrEuD,OAAO,CAACU,GAAG,CAACvE,IAAI,EAAEI,YAAY,CAAC;QAC/BmB,mBAAmB,CAAC,CAAC,CAAC,CAAC;QACvBJ,aAAa,CAACnB,IAAI,CAACwF,cAAc,CAACC,MAAM,GAAG,CAAC,GAC1CzF,IAAI,CAACwF,cAAc,GAAG,CAAC;UAACpE,EAAE,EAAE,CAAC,CAAC;UAAEC,IAAI,EAAE;QAAiB,CAAC,CAAC,CAAC;QAE5DrB,IAAI,CAACA,IAAI,CAAC4C,OAAO,CAACV,CAAC,IAAE;UACnB,IAAG,CAACA,CAAC,CAACmB,OAAO,EAAC;YACZnB,CAAC,CAACmB,OAAO,GAAG,CAAC;UACf;QACF,CAAC,CAAC;QACFlD,YAAY,CAACH,IAAI,CAACA,IAAI,CAAC;MAEzB,CAAC,CAAC,OAAO4D,KAAK,EAAE;QACdC,OAAO,CAACU,GAAG,CAACX,KAAK,CAAC;MACpB;IACF,CAAC;IACD3D,QAAQ,CAACf,mBAAmB,CAAC,CAAC,CAAC;IAC/BoG,SAAS,CAAC,CAAC;IACXrF,QAAQ,CAACd,oBAAoB,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACmB,cAAc,CAAC,CAAC;EAEpBlC,SAAS,CAAC,MAAI;IACZmD,mBAAmB,CAACL,UAAU,CAAC,CAAC,CAAC,CAACE,EAAE,CAAC;EACvC,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB9C,SAAS,CAAC,MAAI;IACZ;IACA,MAAM4B,IAAI,GAAGE,SAAS,CAAC8C,GAAG,CAAC0C,EAAE,IAAE;MAC7B,IAAIvC,WAAW,GAAG,EAAE;QAAEC,eAAe,GAAG,CAAC;QAAE1B,yBAAyB,GAAG,CAAC;MACxE,IAAGJ,gBAAgB,IAAI,CAAC,CAAC,IAAIoE,EAAE,CAAC1F,IAAI,CAACyF,MAAM,GAAG,CAAC,EAAC;QAC9C,MAAME,QAAQ,GAAGD,EAAE,CAAC1F,IAAI,CAACiC,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACyC,cAAc,IAAErD,gBAAgB,CAAC;QACpE6B,WAAW,GAAGwC,QAAQ,CAACC,gBAAgB;QACvCxC,eAAe,GAAGuC,QAAQ,CAACvC,eAAe;QAC1C1B,yBAAyB,GAAGmE,UAAU,CAAC,CAACzC,eAAe,GAACsC,EAAE,CAAC/D,UAAU,EAAEmE,OAAO,CAAC,CAAC,CAAC,CAAC;MACpF;MACA,OAAO;QACL7C,WAAW,EAAEyC,EAAE,CAACzC,WAAW;QAC3BC,aAAa,EAAEtE,QAAQ,CAAC8G,EAAE,CAACzC,WAAW,GAAC,CAAC,CAAC;QACzCtB,UAAU,EAAE+D,EAAE,CAAC/D,UAAU;QACzBC,kBAAkB,EAAE8D,EAAE,CAAC9D,kBAAkB;QACzCC,KAAK,EAAE6D,EAAE,CAAC7D,KAAK;QACfwB,OAAO,EAAEqC,EAAE,CAACrC,OAAO;QACnBF,WAAW,EAAEA,WAAW;QACxBC,eAAe,EAAEA,eAAe;QAChC1B,yBAAyB,EAAEA;MAC7B,CAAC;IACH,CAAC,CAAC;IACF;IACAzB,QAAQ,CAAClB,uBAAuB,CAAC;MAACiB,IAAI,EAAEA;IAAI,CAAC,CAAC,CAAC;EACjD,CAAC,EAAE,CAACE,SAAS,EAAEoB,gBAAgB,CAAC,CAAC;EAEjC,oBACE7B,OAAA,CAACpB,SAAS;IAAA0H,QAAA,gBACRtG,OAAA;MAAAsG,QAAA,EAAI;IAA8B;MAAA5B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCzG,OAAA;MAAK0G,SAAS,EAAC,6BAA6B;MAAAJ,QAAA,gBAC1CtG,OAAA;QAAK0G,SAAS,EAAC,YAAY;QAAAJ,QAAA,gBACzBtG,OAAA,CAACd,QAAQ;UAACqB,IAAI,EAAEI,YAAY,CAAC4C,GAAG,CAACd,CAAC,IAAEA,CAAC,CAACC,aAAa,CAAE;UAACiE,IAAI,EAAErE;QAAe;UAAAoC,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7EzG,OAAA;UAAK0G,SAAS,EAAC,MAAM;UAAAJ,QAAA,eAACtG,OAAA,CAACd,QAAQ;YAACqB,IAAI,EAAEkB,UAAU,CAAC8B,GAAG,CAACd,CAAC,IAAEA,CAAC,CAACb,IAAI,CAAE;YAAC+E,IAAI,EAAE/D;UAAiB;YAAA8B,QAAA,EAAA6B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAA/B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChGzG,OAAA;UAAK0G,SAAS,EAAC,aAAa;UAAAJ,QAAA,eAC1BtG,OAAA;YAAO0G,SAAS,EAAC,2BAA2B;YAAAJ,QAAA,gBAC1CtG,OAAA;cAAO0G,SAAS,EAAC,SAAS;cAACnB,IAAI,EAAC,UAAU;cAACvC,OAAO,EAAE3B,YAAa;cAACuF,QAAQ,EAAE/D;YAAmB;cAAA6B,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClGzG,OAAA;cAAM0G,SAAS,EAAC,MAAM;cAAAJ,QAAA,EAAC;YAAY;cAAA5B,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAA/B,QAAA,EAAA6B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAA/B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNzG,OAAA;UAAK0G,SAAS,EAAC,qBAAqB;UAACG,OAAO,EAAEA,CAAA,KAAI;YAACrF,UAAU,CAAC,CAACD,OAAO,CAAC;UAAA,CAAE;UAAA+E,QAAA,EACtE/E,OAAO,gBACRvB,OAAA;YAAK0G,SAAS,EAAC,iBAAiB;YAAAJ,QAAA,GAAC,4NAG/B,eAAAtG,OAAA;cAAA0E,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,4KACN,eAAAzG,OAAA;cAAA0E,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,yFACN,eAAAzG,OAAA;cAAA0E,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,sKACN,eAAAzG,OAAA;cAAA0E,QAAA,EAAA6B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,+PACR;UAAA;YAAA/B,QAAA,EAAA6B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAAGzG,OAAA;YAAK0G,SAAS,EAAC,yBAAyB;YAAAJ,QAAA,EAAC;UAAkB;YAAA5B,QAAA,EAAA6B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAA/B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC;MAAA;QAAA/B,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNzG,OAAA;QAAK0G,SAAS,EAAC;MAAY;QAAAhC,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClCzG,OAAA;QAAK0G,SAAS,EAAC,YAAY;QAAAJ,QAAA,gBACzBtG,OAAA;UAAK0G,SAAS,EAAE,yBAAyB,IAAE7E,gBAAgB,IAAE,CAAC,CAAC,GAAC,UAAU,GAAC,EAAE,CAAE;UAACgF,OAAO,EAAEA,CAAA,KAAI;YAAC7F,kBAAkB,CAAC,IAAI,CAAC;UAAA,CAAE;UAAAsF,QAAA,EAAC;QAAkB;UAAA5B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAChJ1F,eAAe,iBAAIf,OAAA,CAACF,iBAAiB;UAACS,IAAI,EAAEY,MAAO;UAACU,gBAAgB,EAAEJ,UAAU,CAACe,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACd,EAAE,IAAEE,gBAAgB,CAAC,CAACD,IAAK;UAAC+E,IAAI,EAAE1D;QAAY;UAAAyB,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC5I,CAACxF,aAAa,gBACbjB,OAAA;UAAK0G,SAAS,EAAE,8BAA8B,IAAE7E,gBAAgB,IAAE,CAAC,CAAC,GAAC,UAAU,GAAC,EAAE,CAAE;UAACgF,OAAO,EAAExD,KAAM;UAAAiD,QAAA,EAAC;QAAQ;UAAA5B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAEnHzG,OAAA;UAAK0G,SAAS,EAAC,6BAA6B;UAACG,OAAO,EAAExC,SAAU;UAAAiC,QAAA,EAAC;QAAa;UAAA5B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEtFzG,OAAA;UAAK0G,SAAS,EAAC,6BAA6B;UAACG,OAAO,EAAEvC,YAAa;UAAAgC,QAAA,EAAC;QAAgB;UAAA5B,QAAA,EAAA6B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAA/B,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC;IAAA;MAAA/B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACL5E,gBAAgB,IAAE,CAAC,CAAC,iBAAI7B,OAAA;MAAK0G,SAAS,EAAC,MAAM;MAAAJ,QAAA,eAC5CtG,OAAA,CAACH,eAAe;QAACiH,UAAU,EAAE3F,MAAO;QAACE,YAAY,EAAEA;MAAa;QAAAqD,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAA/B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAA/B,QAAA,EAAA6B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEhB;AAACvG,EAAA,CAjQQD,iBAAiB;EAAA,QACPpB,WAAW,EACTO,WAAW,EACbC,WAAW;AAAA;AAAA0H,EAAA,GAHrB9G,iBAAiB;AAmQ1B,eAAeA,iBAAiB;AAAA,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}