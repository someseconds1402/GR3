{"ast":null,"code":"var _jsxFileName = \"D:\\\\Don't Click Here\\\\2022_2\\\\code_2\\\\client\\\\src\\\\components\\\\subscreen\\\\guest\\\\SuppliesDisplay.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport MainFrame from '../../mainframe/MainFrame';\nimport { getSupplyQuantityAPI } from '../../../service/userService';\nimport LineChart from '../../chart/LineChart';\nimport Dropdown from '../../dropdown/Dropdown';\nimport province from './../../../constant/province';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SuppliesDisplay() {\n  _s();\n  // Lấy data pandemic từ localstorage\n  const pandemicData = localStorage.getItem('pandemicData').split('2018@4139,.abc/&xyz').filter(item => item !== '').map(e => {\n    const [id, name] = e.split(':');\n    return {\n      pandemic_id: id,\n      pandemic_name: name\n    };\n  });\n  localStorage.setItem('pandemicOption', 1);\n  const [chartData, setChartData] = useState({\n    labels: ['No name'],\n    datasets: [{\n      label: \"No name\",\n      data: [0]\n    }]\n  });\n  const getEpidemicData = async (province_id, pandemic_id) => {\n    const data = await getSupplyQuantityAPI(province_id, pandemic_id);\n    console.log(data);\n    // setChartData({\n    //   labels: data.dateRange,\n    //   datasets: [\n    //     {\n    //       label: data.infection.title,\n    //       data: data.infection.list.map(e=>e.quantity_in_today),\n    //       borderColor: 'blue',\n    //       backgroundColor: 'blue'\n    //     },\n    //     {\n    //       label: data.recovered.title,\n    //       data: data.recovered.list.map(e=>e.quantity_in_today),\n    //       borderColor: 'green',\n    //       backgroundColor: 'green'\n    //     },\n    //     {\n    //       label: data.death.title,\n    //       data: data.death.list.map(e=>e.quantity_in_today),\n    //       borderColor: 'red',\n    //       backgroundColor: 'red'\n    //     },\n    //   ]\n    // })\n  };\n\n  const changePandemic = option => {\n    getEpidemicData(localStorage.getItem('epidemicDisplay_selectedProvinceId'), 2);\n  };\n  const changeProvince = option => {\n    const province_id = province.indexOf(option) + 1;\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\n    getEpidemicData(province_id, 2);\n  };\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(MainFrame, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tra c\\u1EE9u s\\u1ED1 li\\u1EC7u V\\u1EADt t\\u01B0 y t\\u1EBF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 \",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          data: province,\n          func: changeProvince\n          // selectedOption = {parseInt(localStorage.getItem('epidemicDisplay_selectedProvinceId'))}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          data: pandemicData.map(e => e.pandemic_name),\n          func: changePandemic\n          // selectedOption={parseInt(localStorage.getItem('pandemicOption'))}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-3\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SuppliesDisplay, \"Z2e0LlNQe7n2xJQ6kNonQTxOswE=\");\n_c = SuppliesDisplay;\nexport default SuppliesDisplay;\nvar _c;\n$RefreshReg$(_c, \"SuppliesDisplay\");","map":{"version":3,"names":["useState","useEffect","MainFrame","getSupplyQuantityAPI","LineChart","Dropdown","province","jsxDEV","_jsxDEV","SuppliesDisplay","_s","pandemicData","localStorage","getItem","split","filter","item","map","e","id","name","pandemic_id","pandemic_name","setItem","chartData","setChartData","labels","datasets","label","data","getEpidemicData","province_id","console","log","changePandemic","option","changeProvince","indexOf","children","fileName","_jsxFileName","lineNumber","columnNumber","className","func","_c","$RefreshReg$"],"sources":["D:/Don't Click Here/2022_2/code_2/client/src/components/subscreen/guest/SuppliesDisplay.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport MainFrame from '../../mainframe/MainFrame'\r\nimport { getSupplyQuantityAPI } from '../../../service/userService'\r\nimport LineChart from '../../chart/LineChart';\r\nimport Dropdown from '../../dropdown/Dropdown';\r\nimport province from './../../../constant/province'\r\n\r\nfunction SuppliesDisplay() {\r\n\r\n  // Lấy data pandemic từ localstorage\r\n  const pandemicData = (localStorage.getItem('pandemicData'))\r\n    .split('2018@4139,.abc/&xyz')\r\n    .filter((item) => item !== '')\r\n    .map(e=>{\r\n      const [id, name] = e.split(':');\r\n      return {\r\n        pandemic_id: id,\r\n        pandemic_name: name,\r\n      }\r\n    });\r\n    localStorage.setItem('pandemicOption', 1);\r\n\r\n  const [chartData, setChartData] = useState({\r\n    labels: ['No name'],\r\n    datasets: [\r\n      {\r\n        label: \"No name\",\r\n        data: [0],\r\n      }\r\n    ]\r\n  });\r\n\r\n  const getEpidemicData = async (province_id, pandemic_id) => {\r\n    const data = await getSupplyQuantityAPI(province_id, pandemic_id);\r\n    console.log(data);\r\n    // setChartData({\r\n    //   labels: data.dateRange,\r\n    //   datasets: [\r\n    //     {\r\n    //       label: data.infection.title,\r\n    //       data: data.infection.list.map(e=>e.quantity_in_today),\r\n    //       borderColor: 'blue',\r\n    //       backgroundColor: 'blue'\r\n    //     },\r\n    //     {\r\n    //       label: data.recovered.title,\r\n    //       data: data.recovered.list.map(e=>e.quantity_in_today),\r\n    //       borderColor: 'green',\r\n    //       backgroundColor: 'green'\r\n    //     },\r\n    //     {\r\n    //       label: data.death.title,\r\n    //       data: data.death.list.map(e=>e.quantity_in_today),\r\n    //       borderColor: 'red',\r\n    //       backgroundColor: 'red'\r\n    //     },\r\n    //   ]\r\n    // })\r\n  }\r\n\r\n  const changePandemic = (option)=>{\r\n    getEpidemicData(\r\n      localStorage.getItem('epidemicDisplay_selectedProvinceId'), \r\n      2, \r\n    );\r\n  }\r\n\r\n  const changeProvince = (option)=>{\r\n    const province_id = province.indexOf(option) + 1;\r\n    localStorage.setItem('epidemicDisplay_selectedProvinceId', province_id);\r\n    getEpidemicData(\r\n      province_id, \r\n      2, \r\n    );\r\n  }\r\n\r\n  useEffect(()=>{\r\n  })\r\n\r\n  return (\r\n    <MainFrame>\r\n      <h1>Tra cứu số liệu Vật tư y tế</h1>\r\n      <div className=\"grid grid-cols-4 gap-4 mt-5\">\r\n        <div className=\"col-span-1 \">\r\n          <Dropdown \r\n            data={province} func={changeProvince} \r\n            // selectedOption = {parseInt(localStorage.getItem('epidemicDisplay_selectedProvinceId'))}\r\n          />\r\n          <Dropdown data={pandemicData.map(e=>e.pandemic_name)} func={changePandemic} \r\n            // selectedOption={parseInt(localStorage.getItem('pandemicOption'))}\r\n          />\r\n          {/* <MyDatePicker func={changeDate}/> */}\r\n        </div>\r\n        <div className=\"col-span-3\">\r\n          <LineChart data={chartData} />\r\n        </div>\r\n      </div>\r\n    </MainFrame>\r\n  )\r\n}\r\n\r\nexport default SuppliesDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}