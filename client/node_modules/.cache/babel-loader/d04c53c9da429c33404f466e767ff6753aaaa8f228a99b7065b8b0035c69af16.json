{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nconst config = {\n  api: {\n    API_BASE_URL: \"http://localhost:8080/\",\n    ROUTER_BASE_NAME: null\n  },\n  app: {\n    /**\n     * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\n     * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\n     */\n    ROUTER_BASE_NAME: null\n  }\n};\nconst instance = axios.create({\n  baseURL: config.api.API_BASE_URL,\n  withCredentials: true\n});\nconst createError = function (httpStatusCode, statusCode, errorMessage, problems) {\n  let errorCode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  const error = new Error();\n  error.httpStatusCode = httpStatusCode;\n  error.statusCode = statusCode;\n  error.errorMessage = errorMessage;\n  error.problems = problems;\n  error.errorCode = errorCode + \"\";\n  return error;\n};\nexport const isSuccessStatusCode = s => {\n  // May be string or number\n  const statusType = typeof s;\n  return statusType === 'number' && s === 0 || statusType === 'string' && s.toUpperCase() === 'OK';\n};\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n    return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n  }\n\n  // Return direct data to callback\n  if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n    return data['d'];\n  }\n  // Handle special case\n  if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n    return null;\n  }\n  return response.data;\n}, error => {\n  const {\n    response\n  } = error;\n  if (response == null) {\n    return Promise.reject(error);\n  }\n  const {\n    data\n  } = response;\n  if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n    return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n  }\n  if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n    return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n  }\n  return Promise.reject(createError(response.status));\n});\nexport default instance;","map":{"version":3,"names":["axios","_","config","api","API_BASE_URL","ROUTER_BASE_NAME","app","instance","create","baseURL","withCredentials","createError","httpStatusCode","statusCode","errorMessage","problems","errorCode","arguments","length","undefined","error","Error","isSuccessStatusCode","s","statusType","toUpperCase","interceptors","response","use","data","hasOwnProperty","Promise","reject","status","keys"],"sources":["D:/Don't Click Here/2022_2/code_2/gr/src/axios.js"],"sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\n\nconst config = {\n    api: {\n        API_BASE_URL: \"http://localhost:8080/\",\n        ROUTER_BASE_NAME: null,\n    },\n    app: {\n        /**\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\n         */\n        ROUTER_BASE_NAME: null,\n    }\n}\n\nconst instance = axios.create({\n    baseURL: config.api.API_BASE_URL,\n    withCredentials: true\n});\n\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n    const error = new Error();\n    error.httpStatusCode = httpStatusCode;\n    error.statusCode = statusCode;\n    error.errorMessage = errorMessage;\n    error.problems = problems;\n    error.errorCode = errorCode + \"\";\n    return error;\n};\n\nexport const isSuccessStatusCode = (s) => {\n    // May be string or number\n    const statusType = typeof s;\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\n};\n\ninstance.interceptors.response.use(\n    (response) => {\n        // Thrown error for request with OK status code\n        const { data } = response;\n        if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n            return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n        }\n\n        // Return direct data to callback\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n            return data['d'];\n        }\n        // Handle special case\n        if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n            return null;\n        }\n        return response.data;\n    },\n    (error) => {\n        const { response } = error;\n        if (response == null) {\n            return Promise.reject(error);\n        }\n\n        const { data } = response;\n\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n            return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n        }\n\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n            return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n        }\n\n        return Promise.reject(createError(response.status));\n    }\n);\n\nexport default instance;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}